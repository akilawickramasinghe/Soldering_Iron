
solderingIronv1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  000010f8  0000118c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000421  00800144  00800144  000011d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001200  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  00001240  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003e29  00000000  00000000  000014e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e31  00000000  00000000  00005311  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001f60  00000000  00000000  00006142  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a3c  00000000  00000000  000080a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e17  00000000  00000000  00008ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003fb2  00000000  00000000  000098f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b0  00000000  00000000  0000d8a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	53 c1       	rjmp	.+678    	; 0x2a8 <__ctors_end>
       2:	00 00       	nop
       4:	6c c1       	rjmp	.+728    	; 0x2de <__bad_interrupt>
       6:	00 00       	nop
       8:	7a c1       	rjmp	.+756    	; 0x2fe <__vector_2>
       a:	00 00       	nop
       c:	68 c1       	rjmp	.+720    	; 0x2de <__bad_interrupt>
       e:	00 00       	nop
      10:	66 c1       	rjmp	.+716    	; 0x2de <__bad_interrupt>
      12:	00 00       	nop
      14:	64 c1       	rjmp	.+712    	; 0x2de <__bad_interrupt>
      16:	00 00       	nop
      18:	62 c1       	rjmp	.+708    	; 0x2de <__bad_interrupt>
      1a:	00 00       	nop
      1c:	60 c1       	rjmp	.+704    	; 0x2de <__bad_interrupt>
      1e:	00 00       	nop
      20:	5e c1       	rjmp	.+700    	; 0x2de <__bad_interrupt>
      22:	00 00       	nop
      24:	5c c1       	rjmp	.+696    	; 0x2de <__bad_interrupt>
      26:	00 00       	nop
      28:	5a c1       	rjmp	.+692    	; 0x2de <__bad_interrupt>
      2a:	00 00       	nop
      2c:	58 c1       	rjmp	.+688    	; 0x2de <__bad_interrupt>
      2e:	00 00       	nop
      30:	56 c1       	rjmp	.+684    	; 0x2de <__bad_interrupt>
      32:	00 00       	nop
      34:	54 c1       	rjmp	.+680    	; 0x2de <__bad_interrupt>
      36:	00 00       	nop
      38:	52 c1       	rjmp	.+676    	; 0x2de <__bad_interrupt>
      3a:	00 00       	nop
      3c:	50 c1       	rjmp	.+672    	; 0x2de <__bad_interrupt>
      3e:	00 00       	nop
      40:	76 c5       	rjmp	.+2796   	; 0xb2e <__vector_16>
      42:	00 00       	nop
      44:	4c c1       	rjmp	.+664    	; 0x2de <__bad_interrupt>
      46:	00 00       	nop
      48:	4a c1       	rjmp	.+660    	; 0x2de <__bad_interrupt>
      4a:	00 00       	nop
      4c:	48 c1       	rjmp	.+656    	; 0x2de <__bad_interrupt>
      4e:	00 00       	nop
      50:	46 c1       	rjmp	.+652    	; 0x2de <__bad_interrupt>
      52:	00 00       	nop
      54:	2f c6       	rjmp	.+3166   	; 0xcb4 <__vector_21>
      56:	00 00       	nop
      58:	42 c1       	rjmp	.+644    	; 0x2de <__bad_interrupt>
      5a:	00 00       	nop
      5c:	40 c1       	rjmp	.+640    	; 0x2de <__bad_interrupt>
      5e:	00 00       	nop
      60:	3e c1       	rjmp	.+636    	; 0x2de <__bad_interrupt>
      62:	00 00       	nop
      64:	3c c1       	rjmp	.+632    	; 0x2de <__bad_interrupt>
	...

00000068 <__trampolines_end>:
      68:	05 00       	.word	0x0005	; ????
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	05 00       	.word	0x0005	; ????
      70:	00 5f       	subi	r16, 0xF0	; 240
      72:	00 00       	nop
      74:	05 00       	.word	0x0005	; ????
      76:	07 00       	.word	0x0007	; ????
      78:	07 00       	.word	0x0007	; ????
      7a:	05 14       	cp	r0, r5
      7c:	7f 14       	cp	r7, r15
      7e:	7f 14       	cp	r7, r15
      80:	05 24       	eor	r0, r5
      82:	2a 7f       	andi	r18, 0xFA	; 250
      84:	2a 12       	cpse	r2, r26
      86:	05 23       	and	r16, r21
      88:	13 08       	sbc	r1, r3
      8a:	64 62       	ori	r22, 0x24	; 36
      8c:	05 36       	cpi	r16, 0x65	; 101
      8e:	49 56       	subi	r20, 0x69	; 105
      90:	20 50       	subi	r18, 0x00	; 0
      92:	05 08       	sbc	r0, r5
      94:	07 03       	mulsu	r16, r23
      96:	00 00       	nop
      98:	05 00       	.word	0x0005	; ????
      9a:	1c 22       	and	r1, r28
      9c:	41 00       	.word	0x0041	; ????
      9e:	05 00       	.word	0x0005	; ????
      a0:	41 22       	and	r4, r17
      a2:	1c 00       	.word	0x001c	; ????
      a4:	05 14       	cp	r0, r5
      a6:	08 3e       	cpi	r16, 0xE8	; 232
      a8:	08 14       	cp	r0, r8
      aa:	05 08       	sbc	r0, r5
      ac:	08 3e       	cpi	r16, 0xE8	; 232
      ae:	08 08       	sbc	r0, r8
      b0:	05 00       	.word	0x0005	; ????
      b2:	b0 70       	andi	r27, 0x00	; 0
      b4:	00 00       	nop
      b6:	05 08       	sbc	r0, r5
      b8:	08 08       	sbc	r0, r8
      ba:	08 08       	sbc	r0, r8
      bc:	05 00       	.word	0x0005	; ????
      be:	60 60       	ori	r22, 0x00	; 0
      c0:	00 00       	nop
      c2:	05 20       	and	r0, r5
      c4:	10 08       	sbc	r1, r0
      c6:	04 02       	muls	r16, r20
      c8:	05 3e       	cpi	r16, 0xE5	; 229
      ca:	51 49       	sbci	r21, 0x91	; 145
      cc:	45 3e       	cpi	r20, 0xE5	; 229
      ce:	05 00       	.word	0x0005	; ????
      d0:	42 7f       	andi	r20, 0xF2	; 242
      d2:	40 00       	.word	0x0040	; ????
      d4:	05 72       	andi	r16, 0x25	; 37
      d6:	49 49       	sbci	r20, 0x99	; 153
      d8:	49 46       	sbci	r20, 0x69	; 105
      da:	05 21       	and	r16, r5
      dc:	41 49       	sbci	r20, 0x91	; 145
      de:	4d 33       	cpi	r20, 0x3D	; 61
      e0:	05 18       	sub	r0, r5
      e2:	14 12       	cpse	r1, r20
      e4:	7f 10       	cpse	r7, r15
      e6:	05 27       	eor	r16, r21
      e8:	45 45       	sbci	r20, 0x55	; 85
      ea:	45 39       	cpi	r20, 0x95	; 149
      ec:	05 3c       	cpi	r16, 0xC5	; 197
      ee:	4a 49       	sbci	r20, 0x9A	; 154
      f0:	49 31       	cpi	r20, 0x19	; 25
      f2:	05 41       	sbci	r16, 0x15	; 21
      f4:	21 11       	cpse	r18, r1
      f6:	09 07       	cpc	r16, r25
      f8:	05 36       	cpi	r16, 0x65	; 101
      fa:	49 49       	sbci	r20, 0x99	; 153
      fc:	49 36       	cpi	r20, 0x69	; 105
      fe:	05 46       	sbci	r16, 0x65	; 101
     100:	49 49       	sbci	r20, 0x99	; 153
     102:	29 1e       	adc	r2, r25
     104:	05 00       	.word	0x0005	; ????
     106:	00 14       	cp	r0, r0
     108:	00 00       	nop
     10a:	05 00       	.word	0x0005	; ????
     10c:	40 34       	cpi	r20, 0x40	; 64
     10e:	00 00       	nop
     110:	05 08       	sbc	r0, r5
     112:	14 22       	and	r1, r20
     114:	41 00       	.word	0x0041	; ????
     116:	05 14       	cp	r0, r5
     118:	14 14       	cp	r1, r4
     11a:	14 14       	cp	r1, r4
     11c:	05 41       	sbci	r16, 0x15	; 21
     11e:	22 14       	cp	r2, r2
     120:	08 00       	.word	0x0008	; ????
     122:	05 02       	muls	r16, r21
     124:	01 59       	subi	r16, 0x91	; 145
     126:	09 06       	cpc	r0, r25
     128:	05 3e       	cpi	r16, 0xE5	; 229
     12a:	41 5d       	subi	r20, 0xD1	; 209
     12c:	59 4e       	sbci	r21, 0xE9	; 233
     12e:	05 7c       	andi	r16, 0xC5	; 197
     130:	12 11       	cpse	r17, r2
     132:	12 7c       	andi	r17, 0xC2	; 194
     134:	05 7f       	andi	r16, 0xF5	; 245
     136:	49 49       	sbci	r20, 0x99	; 153
     138:	49 36       	cpi	r20, 0x69	; 105
     13a:	05 3e       	cpi	r16, 0xE5	; 229
     13c:	41 41       	sbci	r20, 0x11	; 17
     13e:	41 22       	and	r4, r17
     140:	05 7f       	andi	r16, 0xF5	; 245
     142:	41 41       	sbci	r20, 0x11	; 17
     144:	41 3e       	cpi	r20, 0xE1	; 225
     146:	05 7f       	andi	r16, 0xF5	; 245
     148:	49 49       	sbci	r20, 0x99	; 153
     14a:	49 49       	sbci	r20, 0x99	; 153
     14c:	05 7f       	andi	r16, 0xF5	; 245
     14e:	09 09       	sbc	r16, r9
     150:	09 09       	sbc	r16, r9
     152:	05 3e       	cpi	r16, 0xE5	; 229
     154:	41 41       	sbci	r20, 0x11	; 17
     156:	51 73       	andi	r21, 0x31	; 49
     158:	05 7f       	andi	r16, 0xF5	; 245
     15a:	08 08       	sbc	r0, r8
     15c:	08 7f       	andi	r16, 0xF8	; 248
     15e:	05 00       	.word	0x0005	; ????
     160:	41 7f       	andi	r20, 0xF1	; 241
     162:	41 00       	.word	0x0041	; ????
     164:	05 20       	and	r0, r5
     166:	40 41       	sbci	r20, 0x10	; 16
     168:	3f 01       	movw	r6, r30
     16a:	05 7f       	andi	r16, 0xF5	; 245
     16c:	08 14       	cp	r0, r8
     16e:	22 41       	sbci	r18, 0x12	; 18
     170:	05 7f       	andi	r16, 0xF5	; 245
     172:	40 40       	sbci	r20, 0x00	; 0
     174:	40 40       	sbci	r20, 0x00	; 0
     176:	05 7f       	andi	r16, 0xF5	; 245
     178:	02 0c       	add	r0, r2
     17a:	02 7f       	andi	r16, 0xF2	; 242
     17c:	05 7f       	andi	r16, 0xF5	; 245
     17e:	04 08       	sbc	r0, r4
     180:	10 7f       	andi	r17, 0xF0	; 240
     182:	05 3e       	cpi	r16, 0xE5	; 229
     184:	41 41       	sbci	r20, 0x11	; 17
     186:	41 3e       	cpi	r20, 0xE1	; 225
     188:	05 7f       	andi	r16, 0xF5	; 245
     18a:	09 09       	sbc	r16, r9
     18c:	09 06       	cpc	r0, r25
     18e:	05 3e       	cpi	r16, 0xE5	; 229
     190:	41 51       	subi	r20, 0x11	; 17
     192:	21 5e       	subi	r18, 0xE1	; 225
     194:	05 7f       	andi	r16, 0xF5	; 245
     196:	09 19       	sub	r16, r9
     198:	29 46       	sbci	r18, 0x69	; 105
     19a:	05 26       	eor	r0, r21
     19c:	49 49       	sbci	r20, 0x99	; 153
     19e:	49 32       	cpi	r20, 0x29	; 41
     1a0:	05 01       	movw	r0, r10
     1a2:	01 7f       	andi	r16, 0xF1	; 241
     1a4:	01 01       	movw	r0, r2
     1a6:	05 3f       	cpi	r16, 0xF5	; 245
     1a8:	40 40       	sbci	r20, 0x00	; 0
     1aa:	40 3f       	cpi	r20, 0xF0	; 240
     1ac:	05 1f       	adc	r16, r21
     1ae:	20 40       	sbci	r18, 0x00	; 0
     1b0:	20 1f       	adc	r18, r16
     1b2:	05 3f       	cpi	r16, 0xF5	; 245
     1b4:	40 38       	cpi	r20, 0x80	; 128
     1b6:	40 3f       	cpi	r20, 0xF0	; 240
     1b8:	05 63       	ori	r16, 0x35	; 53
     1ba:	14 08       	sbc	r1, r4
     1bc:	14 63       	ori	r17, 0x34	; 52
     1be:	05 03       	mulsu	r16, r21
     1c0:	04 78       	andi	r16, 0x84	; 132
     1c2:	04 03       	mulsu	r16, r20
     1c4:	05 61       	ori	r16, 0x15	; 21
     1c6:	51 49       	sbci	r21, 0x91	; 145
     1c8:	45 43       	sbci	r20, 0x35	; 53
     1ca:	05 00       	.word	0x0005	; ????
     1cc:	7f 41       	sbci	r23, 0x1F	; 31
     1ce:	41 00       	.word	0x0041	; ????
     1d0:	05 02       	muls	r16, r21
     1d2:	04 08       	sbc	r0, r4
     1d4:	10 20       	and	r1, r0
     1d6:	05 00       	.word	0x0005	; ????
     1d8:	41 41       	sbci	r20, 0x11	; 17
     1da:	7f 00       	.word	0x007f	; ????
     1dc:	05 04       	cpc	r0, r5
     1de:	02 01       	movw	r0, r4
     1e0:	02 04       	cpc	r0, r2
     1e2:	05 40       	sbci	r16, 0x05	; 5
     1e4:	40 40       	sbci	r20, 0x00	; 0
     1e6:	40 40       	sbci	r20, 0x00	; 0
     1e8:	05 07       	cpc	r16, r21
     1ea:	0b 00       	.word	0x000b	; ????
     1ec:	00 00       	nop
     1ee:	05 20       	and	r0, r5
     1f0:	54 54       	subi	r21, 0x44	; 68
     1f2:	78 40       	sbci	r23, 0x08	; 8
     1f4:	05 7f       	andi	r16, 0xF5	; 245
     1f6:	28 44       	sbci	r18, 0x48	; 72
     1f8:	44 38       	cpi	r20, 0x84	; 132
     1fa:	05 38       	cpi	r16, 0x85	; 133
     1fc:	44 44       	sbci	r20, 0x44	; 68
     1fe:	44 28       	or	r4, r4
     200:	05 38       	cpi	r16, 0x85	; 133
     202:	44 44       	sbci	r20, 0x44	; 68
     204:	28 7f       	andi	r18, 0xF8	; 248
     206:	05 38       	cpi	r16, 0x85	; 133
     208:	54 54       	subi	r21, 0x44	; 68
     20a:	54 18       	sub	r5, r4
     20c:	05 00       	.word	0x0005	; ????
     20e:	08 7e       	andi	r16, 0xE8	; 232
     210:	09 02       	muls	r16, r25
     212:	05 18       	sub	r0, r5
     214:	a4 a4       	ldd	r10, Z+44	; 0x2c
     216:	9c 78       	andi	r25, 0x8C	; 140
     218:	05 7f       	andi	r16, 0xF5	; 245
     21a:	08 04       	cpc	r0, r8
     21c:	04 78       	andi	r16, 0x84	; 132
     21e:	05 00       	.word	0x0005	; ????
     220:	44 7d       	andi	r20, 0xD4	; 212
     222:	40 00       	.word	0x0040	; ????
     224:	05 20       	and	r0, r5
     226:	40 40       	sbci	r20, 0x00	; 0
     228:	3d 00       	.word	0x003d	; ????
     22a:	05 7f       	andi	r16, 0xF5	; 245
     22c:	10 28       	or	r1, r0
     22e:	44 00       	.word	0x0044	; ????
     230:	05 00       	.word	0x0005	; ????
     232:	41 7f       	andi	r20, 0xF1	; 241
     234:	40 00       	.word	0x0040	; ????
     236:	05 7c       	andi	r16, 0xC5	; 197
     238:	04 78       	andi	r16, 0x84	; 132
     23a:	04 78       	andi	r16, 0x84	; 132
     23c:	05 7c       	andi	r16, 0xC5	; 197
     23e:	08 04       	cpc	r0, r8
     240:	04 78       	andi	r16, 0x84	; 132
     242:	05 38       	cpi	r16, 0x85	; 133
     244:	44 44       	sbci	r20, 0x44	; 68
     246:	44 38       	cpi	r20, 0x84	; 132
     248:	05 fc       	sbrc	r0, 5
     24a:	18 24       	eor	r1, r8
     24c:	24 18       	sub	r2, r4
     24e:	05 18       	sub	r0, r5
     250:	24 24       	eor	r2, r4
     252:	18 fc       	.word	0xfc18	; ????
     254:	05 7c       	andi	r16, 0xC5	; 197
     256:	08 04       	cpc	r0, r8
     258:	04 08       	sbc	r0, r4
     25a:	05 48       	sbci	r16, 0x85	; 133
     25c:	54 54       	subi	r21, 0x44	; 68
     25e:	54 24       	eor	r5, r4
     260:	05 04       	cpc	r0, r5
     262:	04 3f       	cpi	r16, 0xF4	; 244
     264:	44 24       	eor	r4, r4
     266:	05 3c       	cpi	r16, 0xC5	; 197
     268:	40 40       	sbci	r20, 0x00	; 0
     26a:	20 7c       	andi	r18, 0xC0	; 192
     26c:	05 1c       	adc	r0, r5
     26e:	20 40       	sbci	r18, 0x00	; 0
     270:	20 1c       	adc	r2, r0
     272:	05 3c       	cpi	r16, 0xC5	; 197
     274:	40 30       	cpi	r20, 0x00	; 0
     276:	40 3c       	cpi	r20, 0xC0	; 192
     278:	05 44       	sbci	r16, 0x45	; 69
     27a:	28 10       	cpse	r2, r8
     27c:	28 44       	sbci	r18, 0x48	; 72
     27e:	05 4c       	sbci	r16, 0xC5	; 197
     280:	90 90 90 7c 	lds	r9, 0x7C90	; 0x807c90 <__bss_end+0x772b>
     284:	05 44       	sbci	r16, 0x45	; 69
     286:	64 54       	subi	r22, 0x44	; 68
     288:	4c 44       	sbci	r20, 0x4C	; 76
     28a:	05 00       	.word	0x0005	; ????
     28c:	08 36       	cpi	r16, 0x68	; 104
     28e:	41 00       	.word	0x0041	; ????
     290:	05 00       	.word	0x0005	; ????
     292:	00 77       	andi	r16, 0x70	; 112
     294:	00 00       	nop
     296:	05 00       	.word	0x0005	; ????
     298:	41 36       	cpi	r20, 0x61	; 97
     29a:	08 00       	.word	0x0008	; ????
     29c:	05 04       	cpc	r0, r5
     29e:	02 04       	cpc	r0, r2
     2a0:	08 04       	cpc	r0, r8
     2a2:	05 00       	.word	0x0005	; ????
     2a4:	7f 41       	sbci	r23, 0x1F	; 31
     2a6:	7f 00       	.word	0x007f	; ????

000002a8 <__ctors_end>:
     2a8:	11 24       	eor	r1, r1
     2aa:	1f be       	out	0x3f, r1	; 63
     2ac:	cf ef       	ldi	r28, 0xFF	; 255
     2ae:	d8 e0       	ldi	r29, 0x08	; 8
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	cd bf       	out	0x3d, r28	; 61

000002b4 <__do_copy_data>:
     2b4:	11 e0       	ldi	r17, 0x01	; 1
     2b6:	a0 e0       	ldi	r26, 0x00	; 0
     2b8:	b1 e0       	ldi	r27, 0x01	; 1
     2ba:	e8 ef       	ldi	r30, 0xF8	; 248
     2bc:	f0 e1       	ldi	r31, 0x10	; 16
     2be:	02 c0       	rjmp	.+4      	; 0x2c4 <__do_copy_data+0x10>
     2c0:	05 90       	lpm	r0, Z+
     2c2:	0d 92       	st	X+, r0
     2c4:	a4 34       	cpi	r26, 0x44	; 68
     2c6:	b1 07       	cpc	r27, r17
     2c8:	d9 f7       	brne	.-10     	; 0x2c0 <__do_copy_data+0xc>

000002ca <__do_clear_bss>:
     2ca:	25 e0       	ldi	r18, 0x05	; 5
     2cc:	a4 e4       	ldi	r26, 0x44	; 68
     2ce:	b1 e0       	ldi	r27, 0x01	; 1
     2d0:	01 c0       	rjmp	.+2      	; 0x2d4 <.do_clear_bss_start>

000002d2 <.do_clear_bss_loop>:
     2d2:	1d 92       	st	X+, r1

000002d4 <.do_clear_bss_start>:
     2d4:	a5 36       	cpi	r26, 0x65	; 101
     2d6:	b2 07       	cpc	r27, r18
     2d8:	e1 f7       	brne	.-8      	; 0x2d2 <.do_clear_bss_loop>
     2da:	ba d4       	rcall	.+2420   	; 0xc50 <main>
     2dc:	0b c7       	rjmp	.+3606   	; 0x10f4 <_exit>

000002de <__bad_interrupt>:
     2de:	90 ce       	rjmp	.-736    	; 0x0 <__vectors>

000002e0 <encoder_init>:
	volatile int16_t EncoderSteps;
#endif

	void encoder_init(void)
	{
		___DDR(ENCODER_CHANNELA_PORT) &= ~(1<<ENCODER_CHANNELA_PIN);
     2e0:	8a b1       	in	r24, 0x0a	; 10
     2e2:	8b 7f       	andi	r24, 0xFB	; 251
     2e4:	8a b9       	out	0x0a, r24	; 10
		___DDR(ENCODER_CHANNELB_PORT) &= ~(1<<ENCODER_CHANNELB_PIN);
     2e6:	8a b1       	in	r24, 0x0a	; 10
     2e8:	87 7f       	andi	r24, 0xF7	; 247
     2ea:	8a b9       	out	0x0a, r24	; 10
		
	#if !defined(ENCODER_USE_X2_MODE)
		#ifdef ENCODER_REVERSE_DIRECTION
			EICRA |= (1<<ISC11)|(1<<ISC10); // interrupt on rising edge
     2ec:	e9 e6       	ldi	r30, 0x69	; 105
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	80 81       	ld	r24, Z
     2f2:	8c 60       	ori	r24, 0x0C	; 12
     2f4:	80 83       	st	Z, r24
			EIMSK |= (1<<INT1); // INT1 trigger
     2f6:	8d b3       	in	r24, 0x1d	; 29
     2f8:	82 60       	ori	r24, 0x02	; 2
     2fa:	8d bb       	out	0x1d, r24	; 29
     2fc:	08 95       	ret

000002fe <__vector_2>:
				[Input_Port]   "M"    (_SFR_IO_ADDR(___PIN(ENCODER_CHANNELB_PORT))),
				[Input_Pin]    "M"    (ENCODER_CHANNELB_PIN)
				// no clobbers
			);
		#else
			asm volatile("\n\t"     
     2fe:	5b 9b       	sbis	0x0b, 3	; 11
     300:	1b c0       	rjmp	.+54     	; 0x338 <ENC_DEC_25>
     302:	0f 93       	push	r16
     304:	0f b7       	in	r16, 0x3f	; 63
     306:	1f 93       	push	r17
     308:	10 91 58 01 	lds	r17, 0x0158	; 0x800158 <EncoderSteps>
     30c:	1f 5f       	subi	r17, 0xFF	; 255
     30e:	10 93 58 01 	sts	0x0158, r17	; 0x800158 <EncoderSteps>
     312:	10 91 59 01 	lds	r17, 0x0159	; 0x800159 <EncoderSteps+0x1>
     316:	1f 4f       	sbci	r17, 0xFF	; 255
     318:	10 93 59 01 	sts	0x0159, r17	; 0x800159 <EncoderSteps+0x1>
     31c:	10 91 5a 01 	lds	r17, 0x015A	; 0x80015a <EncoderSteps+0x2>
     320:	1f 4f       	sbci	r17, 0xFF	; 255
     322:	10 93 5a 01 	sts	0x015A, r17	; 0x80015a <EncoderSteps+0x2>
     326:	10 91 5b 01 	lds	r17, 0x015B	; 0x80015b <EncoderSteps+0x3>
     32a:	1f 4f       	sbci	r17, 0xFF	; 255
     32c:	10 93 5b 01 	sts	0x015B, r17	; 0x80015b <EncoderSteps+0x3>
     330:	1f 91       	pop	r17
     332:	0f bf       	out	0x3f, r16	; 63
     334:	0f 91       	pop	r16
     336:	18 95       	reti

00000338 <ENC_DEC_25>:
     338:	0f 93       	push	r16
     33a:	0f b7       	in	r16, 0x3f	; 63
     33c:	1f 93       	push	r17
     33e:	10 91 58 01 	lds	r17, 0x0158	; 0x800158 <EncoderSteps>
     342:	11 50       	subi	r17, 0x01	; 1
     344:	10 93 58 01 	sts	0x0158, r17	; 0x800158 <EncoderSteps>
     348:	10 91 59 01 	lds	r17, 0x0159	; 0x800159 <EncoderSteps+0x1>
     34c:	10 40       	sbci	r17, 0x00	; 0
     34e:	10 93 59 01 	sts	0x0159, r17	; 0x800159 <EncoderSteps+0x1>
     352:	10 91 5a 01 	lds	r17, 0x015A	; 0x80015a <EncoderSteps+0x2>
     356:	10 40       	sbci	r17, 0x00	; 0
     358:	10 93 5a 01 	sts	0x015A, r17	; 0x80015a <EncoderSteps+0x2>
     35c:	10 91 5b 01 	lds	r17, 0x015B	; 0x80015b <EncoderSteps+0x3>
     360:	10 40       	sbci	r17, 0x00	; 0
     362:	10 93 5b 01 	sts	0x015B, r17	; 0x80015b <EncoderSteps+0x3>
     366:	1f 91       	pop	r17
     368:	0f bf       	out	0x3f, r16	; 63
     36a:	0f 91       	pop	r16
     36c:	18 95       	reti

0000036e <GLCD_BufferWrite>:
			break;

		GLCD_PrintChar(r);
		r = pgm_read_byte(Text++);
	}
}
     36e:	66 95       	lsr	r22
     370:	66 95       	lsr	r22
     372:	66 95       	lsr	r22
     374:	e8 2f       	mov	r30, r24
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	80 e8       	ldi	r24, 0x80	; 128
     37a:	68 9f       	mul	r22, r24
     37c:	e0 0d       	add	r30, r0
     37e:	f1 1d       	adc	r31, r1
     380:	11 24       	eor	r1, r1
     382:	eb 59       	subi	r30, 0x9B	; 155
     384:	fe 4f       	sbci	r31, 0xFE	; 254
     386:	40 83       	st	Z, r20
     388:	08 95       	ret

0000038a <GLCD_BufferRead>:
     38a:	66 95       	lsr	r22
     38c:	66 95       	lsr	r22
     38e:	66 95       	lsr	r22
     390:	e8 2f       	mov	r30, r24
     392:	f0 e0       	ldi	r31, 0x00	; 0
     394:	80 e8       	ldi	r24, 0x80	; 128
     396:	68 9f       	mul	r22, r24
     398:	e0 0d       	add	r30, r0
     39a:	f1 1d       	adc	r31, r1
     39c:	11 24       	eor	r1, r1
     39e:	eb 59       	subi	r30, 0x9B	; 155
     3a0:	fe 4f       	sbci	r31, 0xFE	; 254
     3a2:	80 81       	ld	r24, Z
     3a4:	08 95       	ret

000003a6 <Int2bcd>:
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	dc 01       	movw	r26, r24
     3ac:	cb 01       	movw	r24, r22
     3ae:	fa 01       	movw	r30, r20
     3b0:	20 e3       	ldi	r18, 0x30	; 48
     3b2:	22 87       	std	Z+10, r18	; 0x0a
     3b4:	21 87       	std	Z+9, r18	; 0x09
     3b6:	20 87       	std	Z+8, r18	; 0x08
     3b8:	27 83       	std	Z+7, r18	; 0x07
     3ba:	26 83       	std	Z+6, r18	; 0x06
     3bc:	25 83       	std	Z+5, r18	; 0x05
     3be:	24 83       	std	Z+4, r18	; 0x04
     3c0:	23 83       	std	Z+3, r18	; 0x03
     3c2:	22 83       	std	Z+2, r18	; 0x02
     3c4:	21 83       	std	Z+1, r18	; 0x01
     3c6:	20 83       	st	Z, r18
     3c8:	bb 23       	and	r27, r27
     3ca:	4c f4       	brge	.+18     	; 0x3de <Int2bcd+0x38>
     3cc:	b0 95       	com	r27
     3ce:	a0 95       	com	r26
     3d0:	90 95       	com	r25
     3d2:	81 95       	neg	r24
     3d4:	9f 4f       	sbci	r25, 0xFF	; 255
     3d6:	af 4f       	sbci	r26, 0xFF	; 255
     3d8:	bf 4f       	sbci	r27, 0xFF	; 255
     3da:	31 e0       	ldi	r19, 0x01	; 1
     3dc:	08 c0       	rjmp	.+16     	; 0x3ee <Int2bcd+0x48>
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	06 c0       	rjmp	.+12     	; 0x3ee <Int2bcd+0x48>
     3e2:	9a 5c       	subi	r25, 0xCA	; 202
     3e4:	aa 49       	sbci	r26, 0x9A	; 154
     3e6:	bb 43       	sbci	r27, 0x3B	; 59
     3e8:	21 81       	ldd	r18, Z+1	; 0x01
     3ea:	2f 5f       	subi	r18, 0xFF	; 255
     3ec:	21 83       	std	Z+1, r18	; 0x01
     3ee:	81 15       	cp	r24, r1
     3f0:	2a ec       	ldi	r18, 0xCA	; 202
     3f2:	92 07       	cpc	r25, r18
     3f4:	2a e9       	ldi	r18, 0x9A	; 154
     3f6:	a2 07       	cpc	r26, r18
     3f8:	2b e3       	ldi	r18, 0x3B	; 59
     3fa:	b2 07       	cpc	r27, r18
     3fc:	94 f7       	brge	.-28     	; 0x3e2 <Int2bcd+0x3c>
     3fe:	06 c0       	rjmp	.+12     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     400:	91 5e       	subi	r25, 0xE1	; 225
     402:	a5 4f       	sbci	r26, 0xF5	; 245
     404:	b5 40       	sbci	r27, 0x05	; 5
     406:	22 81       	ldd	r18, Z+2	; 0x02
     408:	2f 5f       	subi	r18, 0xFF	; 255
     40a:	22 83       	std	Z+2, r18	; 0x02
     40c:	81 15       	cp	r24, r1
     40e:	21 ee       	ldi	r18, 0xE1	; 225
     410:	92 07       	cpc	r25, r18
     412:	25 ef       	ldi	r18, 0xF5	; 245
     414:	a2 07       	cpc	r26, r18
     416:	25 e0       	ldi	r18, 0x05	; 5
     418:	b2 07       	cpc	r27, r18
     41a:	94 f7       	brge	.-28     	; 0x400 <__EEPROM_REGION_LENGTH__>
     41c:	07 c0       	rjmp	.+14     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
     41e:	80 58       	subi	r24, 0x80	; 128
     420:	96 49       	sbci	r25, 0x96	; 150
     422:	a8 49       	sbci	r26, 0x98	; 152
     424:	b1 09       	sbc	r27, r1
     426:	23 81       	ldd	r18, Z+3	; 0x03
     428:	2f 5f       	subi	r18, 0xFF	; 255
     42a:	23 83       	std	Z+3, r18	; 0x03
     42c:	80 38       	cpi	r24, 0x80	; 128
     42e:	26 e9       	ldi	r18, 0x96	; 150
     430:	92 07       	cpc	r25, r18
     432:	28 e9       	ldi	r18, 0x98	; 152
     434:	a2 07       	cpc	r26, r18
     436:	b1 05       	cpc	r27, r1
     438:	94 f7       	brge	.-28     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     43a:	07 c0       	rjmp	.+14     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     43c:	80 54       	subi	r24, 0x40	; 64
     43e:	92 44       	sbci	r25, 0x42	; 66
     440:	af 40       	sbci	r26, 0x0F	; 15
     442:	b1 09       	sbc	r27, r1
     444:	24 81       	ldd	r18, Z+4	; 0x04
     446:	2f 5f       	subi	r18, 0xFF	; 255
     448:	24 83       	std	Z+4, r18	; 0x04
     44a:	80 34       	cpi	r24, 0x40	; 64
     44c:	22 e4       	ldi	r18, 0x42	; 66
     44e:	92 07       	cpc	r25, r18
     450:	2f e0       	ldi	r18, 0x0F	; 15
     452:	a2 07       	cpc	r26, r18
     454:	b1 05       	cpc	r27, r1
     456:	94 f7       	brge	.-28     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
     458:	07 c0       	rjmp	.+14     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     45a:	80 5a       	subi	r24, 0xA0	; 160
     45c:	96 48       	sbci	r25, 0x86	; 134
     45e:	a1 40       	sbci	r26, 0x01	; 1
     460:	b1 09       	sbc	r27, r1
     462:	25 81       	ldd	r18, Z+5	; 0x05
     464:	2f 5f       	subi	r18, 0xFF	; 255
     466:	25 83       	std	Z+5, r18	; 0x05
     468:	80 3a       	cpi	r24, 0xA0	; 160
     46a:	26 e8       	ldi	r18, 0x86	; 134
     46c:	92 07       	cpc	r25, r18
     46e:	21 e0       	ldi	r18, 0x01	; 1
     470:	a2 07       	cpc	r26, r18
     472:	b1 05       	cpc	r27, r1
     474:	94 f7       	brge	.-28     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
     476:	07 c0       	rjmp	.+14     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
     478:	80 51       	subi	r24, 0x10	; 16
     47a:	97 42       	sbci	r25, 0x27	; 39
     47c:	a1 09       	sbc	r26, r1
     47e:	b1 09       	sbc	r27, r1
     480:	26 81       	ldd	r18, Z+6	; 0x06
     482:	2f 5f       	subi	r18, 0xFF	; 255
     484:	26 83       	std	Z+6, r18	; 0x06
     486:	80 31       	cpi	r24, 0x10	; 16
     488:	27 e2       	ldi	r18, 0x27	; 39
     48a:	92 07       	cpc	r25, r18
     48c:	a1 05       	cpc	r26, r1
     48e:	b1 05       	cpc	r27, r1
     490:	9c f7       	brge	.-26     	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     492:	07 c0       	rjmp	.+14     	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
     494:	88 5e       	subi	r24, 0xE8	; 232
     496:	93 40       	sbci	r25, 0x03	; 3
     498:	a1 09       	sbc	r26, r1
     49a:	b1 09       	sbc	r27, r1
     49c:	27 81       	ldd	r18, Z+7	; 0x07
     49e:	2f 5f       	subi	r18, 0xFF	; 255
     4a0:	27 83       	std	Z+7, r18	; 0x07
     4a2:	88 3e       	cpi	r24, 0xE8	; 232
     4a4:	23 e0       	ldi	r18, 0x03	; 3
     4a6:	92 07       	cpc	r25, r18
     4a8:	a1 05       	cpc	r26, r1
     4aa:	b1 05       	cpc	r27, r1
     4ac:	9c f7       	brge	.-26     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
     4ae:	07 c0       	rjmp	.+14     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
     4b0:	84 56       	subi	r24, 0x64	; 100
     4b2:	91 09       	sbc	r25, r1
     4b4:	a1 09       	sbc	r26, r1
     4b6:	b1 09       	sbc	r27, r1
     4b8:	20 85       	ldd	r18, Z+8	; 0x08
     4ba:	2f 5f       	subi	r18, 0xFF	; 255
     4bc:	20 87       	std	Z+8, r18	; 0x08
     4be:	84 36       	cpi	r24, 0x64	; 100
     4c0:	91 05       	cpc	r25, r1
     4c2:	a1 05       	cpc	r26, r1
     4c4:	b1 05       	cpc	r27, r1
     4c6:	a4 f7       	brge	.-24     	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
     4c8:	06 c0       	rjmp	.+12     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
     4ca:	0a 97       	sbiw	r24, 0x0a	; 10
     4cc:	a1 09       	sbc	r26, r1
     4ce:	b1 09       	sbc	r27, r1
     4d0:	21 85       	ldd	r18, Z+9	; 0x09
     4d2:	2f 5f       	subi	r18, 0xFF	; 255
     4d4:	21 87       	std	Z+9, r18	; 0x09
     4d6:	8a 30       	cpi	r24, 0x0A	; 10
     4d8:	91 05       	cpc	r25, r1
     4da:	a1 05       	cpc	r26, r1
     4dc:	b1 05       	cpc	r27, r1
     4de:	ac f7       	brge	.-22     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
     4e0:	06 c0       	rjmp	.+12     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
     4e2:	01 97       	sbiw	r24, 0x01	; 1
     4e4:	a1 09       	sbc	r26, r1
     4e6:	b1 09       	sbc	r27, r1
     4e8:	22 85       	ldd	r18, Z+10	; 0x0a
     4ea:	2f 5f       	subi	r18, 0xFF	; 255
     4ec:	22 87       	std	Z+10, r18	; 0x0a
     4ee:	18 16       	cp	r1, r24
     4f0:	19 06       	cpc	r1, r25
     4f2:	1a 06       	cpc	r1, r26
     4f4:	1b 06       	cpc	r1, r27
     4f6:	ac f3       	brlt	.-22     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
     4f8:	20 e0       	ldi	r18, 0x00	; 0
     4fa:	01 c0       	rjmp	.+2      	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
     4fc:	2f 5f       	subi	r18, 0xFF	; 255
     4fe:	df 01       	movw	r26, r30
     500:	a2 0f       	add	r26, r18
     502:	b1 1d       	adc	r27, r1
     504:	8c 91       	ld	r24, X
     506:	80 33       	cpi	r24, 0x30	; 48
     508:	c9 f3       	breq	.-14     	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
     50a:	33 23       	and	r19, r19
     50c:	31 f0       	breq	.+12     	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
     50e:	21 50       	subi	r18, 0x01	; 1
     510:	df 01       	movw	r26, r30
     512:	a2 0f       	add	r26, r18
     514:	b1 1d       	adc	r27, r1
     516:	8d e2       	ldi	r24, 0x2D	; 45
     518:	8c 93       	st	X, r24
     51a:	4a e0       	ldi	r20, 0x0A	; 10
     51c:	42 1b       	sub	r20, r18
     51e:	30 e0       	ldi	r19, 0x00	; 0
     520:	0d c0       	rjmp	.+26     	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
     522:	83 2f       	mov	r24, r19
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	ef 01       	movw	r28, r30
     528:	c8 0f       	add	r28, r24
     52a:	d9 1f       	adc	r29, r25
     52c:	82 0f       	add	r24, r18
     52e:	91 1d       	adc	r25, r1
     530:	df 01       	movw	r26, r30
     532:	a8 0f       	add	r26, r24
     534:	b9 1f       	adc	r27, r25
     536:	8c 91       	ld	r24, X
     538:	88 83       	st	Y, r24
     53a:	3f 5f       	subi	r19, 0xFF	; 255
     53c:	43 17       	cp	r20, r19
     53e:	88 f7       	brcc	.-30     	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
     540:	e3 0f       	add	r30, r19
     542:	f1 1d       	adc	r31, r1
     544:	10 82       	st	Z, r1
     546:	df 91       	pop	r29
     548:	cf 91       	pop	r28
     54a:	08 95       	ret

0000054c <GLCD_Send>:
     54c:	0f 93       	push	r16
     54e:	1f 93       	push	r17
     550:	cf 93       	push	r28
     552:	df 93       	push	r29
     554:	c8 2f       	mov	r28, r24
     556:	8b 01       	movw	r16, r22
     558:	d4 2f       	mov	r29, r20
     55a:	34 d2       	rcall	.+1128   	; 0x9c4 <TWI_BeginTransmission>
     55c:	88 e7       	ldi	r24, 0x78	; 120
     55e:	43 d2       	rcall	.+1158   	; 0x9e6 <TWI_Transmit>
     560:	8c 2f       	mov	r24, r28
     562:	41 d2       	rcall	.+1154   	; 0x9e6 <TWI_Transmit>
     564:	c0 e0       	ldi	r28, 0x00	; 0
     566:	06 c0       	rjmp	.+12     	; 0x574 <GLCD_Send+0x28>
     568:	f8 01       	movw	r30, r16
     56a:	ec 0f       	add	r30, r28
     56c:	f1 1d       	adc	r31, r1
     56e:	80 81       	ld	r24, Z
     570:	3a d2       	rcall	.+1140   	; 0x9e6 <TWI_Transmit>
     572:	cf 5f       	subi	r28, 0xFF	; 255
     574:	cd 17       	cp	r28, r29
     576:	c0 f3       	brcs	.-16     	; 0x568 <GLCD_Send+0x1c>
     578:	2e d2       	rcall	.+1116   	; 0x9d6 <TWI_EndTransmission>
     57a:	df 91       	pop	r29
     57c:	cf 91       	pop	r28
     57e:	1f 91       	pop	r17
     580:	0f 91       	pop	r16
     582:	08 95       	ret

00000584 <GLCD_SendCommand>:
     584:	cf 93       	push	r28
     586:	df 93       	push	r29
     588:	1f 92       	push	r1
     58a:	cd b7       	in	r28, 0x3d	; 61
     58c:	de b7       	in	r29, 0x3e	; 62
     58e:	89 83       	std	Y+1, r24	; 0x01
     590:	41 e0       	ldi	r20, 0x01	; 1
     592:	be 01       	movw	r22, r28
     594:	6f 5f       	subi	r22, 0xFF	; 255
     596:	7f 4f       	sbci	r23, 0xFF	; 255
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	d8 df       	rcall	.-80     	; 0x54c <GLCD_Send>
     59c:	0f 90       	pop	r0
     59e:	df 91       	pop	r29
     5a0:	cf 91       	pop	r28
     5a2:	08 95       	ret

000005a4 <GLCD_Render>:
     5a4:	cf 93       	push	r28
     5a6:	81 e2       	ldi	r24, 0x21	; 33
     5a8:	ed df       	rcall	.-38     	; 0x584 <GLCD_SendCommand>
     5aa:	80 e0       	ldi	r24, 0x00	; 0
     5ac:	eb df       	rcall	.-42     	; 0x584 <GLCD_SendCommand>
     5ae:	8f e7       	ldi	r24, 0x7F	; 127
     5b0:	e9 df       	rcall	.-46     	; 0x584 <GLCD_SendCommand>
     5b2:	82 e2       	ldi	r24, 0x22	; 34
     5b4:	e7 df       	rcall	.-50     	; 0x584 <GLCD_SendCommand>
     5b6:	80 e0       	ldi	r24, 0x00	; 0
     5b8:	e5 df       	rcall	.-54     	; 0x584 <GLCD_SendCommand>
     5ba:	87 e0       	ldi	r24, 0x07	; 7
     5bc:	e3 df       	rcall	.-58     	; 0x584 <GLCD_SendCommand>
     5be:	c0 e0       	ldi	r28, 0x00	; 0
     5c0:	0a c0       	rjmp	.+20     	; 0x5d6 <GLCD_Render+0x32>
     5c2:	80 e1       	ldi	r24, 0x10	; 16
     5c4:	c8 9f       	mul	r28, r24
     5c6:	b0 01       	movw	r22, r0
     5c8:	11 24       	eor	r1, r1
     5ca:	6b 59       	subi	r22, 0x9B	; 155
     5cc:	7e 4f       	sbci	r23, 0xFE	; 254
     5ce:	40 e1       	ldi	r20, 0x10	; 16
     5d0:	80 e4       	ldi	r24, 0x40	; 64
     5d2:	bc df       	rcall	.-136    	; 0x54c <GLCD_Send>
     5d4:	cf 5f       	subi	r28, 0xFF	; 255
     5d6:	c0 34       	cpi	r28, 0x40	; 64
     5d8:	a0 f3       	brcs	.-24     	; 0x5c2 <GLCD_Render+0x1e>
     5da:	cf 91       	pop	r28
     5dc:	08 95       	ret

000005de <GLCD_GotoX>:
     5de:	88 23       	and	r24, r24
     5e0:	14 f0       	brlt	.+4      	; 0x5e6 <GLCD_GotoX+0x8>
     5e2:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <__GLCD>
     5e6:	08 95       	ret

000005e8 <GLCD_GotoY>:
     5e8:	80 34       	cpi	r24, 0x40	; 64
     5ea:	10 f4       	brcc	.+4      	; 0x5f0 <GLCD_GotoY+0x8>
     5ec:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <__GLCD+0x1>
     5f0:	08 95       	ret

000005f2 <GLCD_GotoXY>:
     5f2:	cf 93       	push	r28
     5f4:	c6 2f       	mov	r28, r22
     5f6:	f3 df       	rcall	.-26     	; 0x5de <GLCD_GotoX>
     5f8:	8c 2f       	mov	r24, r28
     5fa:	f6 df       	rcall	.-20     	; 0x5e8 <GLCD_GotoY>
     5fc:	cf 91       	pop	r28
     5fe:	08 95       	ret

00000600 <GLCD_Setup>:
     600:	c8 d1       	rcall	.+912    	; 0x992 <TWI_Setup>
     602:	8e ea       	ldi	r24, 0xAE	; 174
     604:	bf df       	rcall	.-130    	; 0x584 <GLCD_SendCommand>
     606:	85 ed       	ldi	r24, 0xD5	; 213
     608:	bd df       	rcall	.-134    	; 0x584 <GLCD_SendCommand>
     60a:	80 ef       	ldi	r24, 0xF0	; 240
     60c:	bb df       	rcall	.-138    	; 0x584 <GLCD_SendCommand>
     60e:	88 ea       	ldi	r24, 0xA8	; 168
     610:	b9 df       	rcall	.-142    	; 0x584 <GLCD_SendCommand>
     612:	8f e3       	ldi	r24, 0x3F	; 63
     614:	b7 df       	rcall	.-146    	; 0x584 <GLCD_SendCommand>
     616:	83 ed       	ldi	r24, 0xD3	; 211
     618:	b5 df       	rcall	.-150    	; 0x584 <GLCD_SendCommand>
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	b3 df       	rcall	.-154    	; 0x584 <GLCD_SendCommand>
     61e:	8d e8       	ldi	r24, 0x8D	; 141
     620:	b1 df       	rcall	.-158    	; 0x584 <GLCD_SendCommand>
     622:	84 e1       	ldi	r24, 0x14	; 20
     624:	af df       	rcall	.-162    	; 0x584 <GLCD_SendCommand>
     626:	80 e4       	ldi	r24, 0x40	; 64
     628:	ad df       	rcall	.-166    	; 0x584 <GLCD_SendCommand>
     62a:	80 e2       	ldi	r24, 0x20	; 32
     62c:	ab df       	rcall	.-170    	; 0x584 <GLCD_SendCommand>
     62e:	80 e0       	ldi	r24, 0x00	; 0
     630:	a9 df       	rcall	.-174    	; 0x584 <GLCD_SendCommand>
     632:	81 ea       	ldi	r24, 0xA1	; 161
     634:	a7 df       	rcall	.-178    	; 0x584 <GLCD_SendCommand>
     636:	88 ec       	ldi	r24, 0xC8	; 200
     638:	a5 df       	rcall	.-182    	; 0x584 <GLCD_SendCommand>
     63a:	8a ed       	ldi	r24, 0xDA	; 218
     63c:	a3 df       	rcall	.-186    	; 0x584 <GLCD_SendCommand>
     63e:	82 e1       	ldi	r24, 0x12	; 18
     640:	a1 df       	rcall	.-190    	; 0x584 <GLCD_SendCommand>
     642:	81 e8       	ldi	r24, 0x81	; 129
     644:	9f df       	rcall	.-194    	; 0x584 <GLCD_SendCommand>
     646:	8f ef       	ldi	r24, 0xFF	; 255
     648:	9d df       	rcall	.-198    	; 0x584 <GLCD_SendCommand>
     64a:	89 ed       	ldi	r24, 0xD9	; 217
     64c:	9b df       	rcall	.-202    	; 0x584 <GLCD_SendCommand>
     64e:	81 ef       	ldi	r24, 0xF1	; 241
     650:	99 df       	rcall	.-206    	; 0x584 <GLCD_SendCommand>
     652:	8b ed       	ldi	r24, 0xDB	; 219
     654:	97 df       	rcall	.-210    	; 0x584 <GLCD_SendCommand>
     656:	80 e2       	ldi	r24, 0x20	; 32
     658:	95 df       	rcall	.-214    	; 0x584 <GLCD_SendCommand>
     65a:	84 ea       	ldi	r24, 0xA4	; 164
     65c:	93 df       	rcall	.-218    	; 0x584 <GLCD_SendCommand>
     65e:	86 ea       	ldi	r24, 0xA6	; 166
     660:	91 df       	rcall	.-222    	; 0x584 <GLCD_SendCommand>
     662:	8e e2       	ldi	r24, 0x2E	; 46
     664:	8f df       	rcall	.-226    	; 0x584 <GLCD_SendCommand>
     666:	8f ea       	ldi	r24, 0xAF	; 175
     668:	8d df       	rcall	.-230    	; 0x584 <GLCD_SendCommand>
     66a:	60 e0       	ldi	r22, 0x00	; 0
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	c1 df       	rcall	.-126    	; 0x5f2 <GLCD_GotoXY>
     670:	ec e5       	ldi	r30, 0x5C	; 92
     672:	f1 e0       	ldi	r31, 0x01	; 1
     674:	86 ea       	ldi	r24, 0xA6	; 166
     676:	82 83       	std	Z+2, r24	; 0x02
     678:	17 82       	std	Z+7, r1	; 0x07
     67a:	16 82       	std	Z+6, r1	; 0x06
     67c:	15 82       	std	Z+5, r1	; 0x05
     67e:	11 82       	std	Z+1, r1	; 0x01
     680:	10 82       	st	Z, r1
     682:	08 95       	ret

00000684 <GLCD_FillScreen>:
     684:	1f 93       	push	r17
     686:	cf 93       	push	r28
     688:	df 93       	push	r29
     68a:	18 2f       	mov	r17, r24
     68c:	d0 e0       	ldi	r29, 0x00	; 0
     68e:	0a c0       	rjmp	.+20     	; 0x6a4 <GLCD_FillScreen+0x20>
     690:	41 2f       	mov	r20, r17
     692:	6d 2f       	mov	r22, r29
     694:	8c 2f       	mov	r24, r28
     696:	6b de       	rcall	.-810    	; 0x36e <GLCD_BufferWrite>
     698:	cf 5f       	subi	r28, 0xFF	; 255
     69a:	01 c0       	rjmp	.+2      	; 0x69e <GLCD_FillScreen+0x1a>
     69c:	c0 e0       	ldi	r28, 0x00	; 0
     69e:	cc 23       	and	r28, r28
     6a0:	bc f7       	brge	.-18     	; 0x690 <GLCD_FillScreen+0xc>
     6a2:	d8 5f       	subi	r29, 0xF8	; 248
     6a4:	d0 34       	cpi	r29, 0x40	; 64
     6a6:	d0 f3       	brcs	.-12     	; 0x69c <GLCD_FillScreen+0x18>
     6a8:	df 91       	pop	r29
     6aa:	cf 91       	pop	r28
     6ac:	1f 91       	pop	r17
     6ae:	08 95       	ret

000006b0 <GLCD_Clear>:
     6b0:	80 e0       	ldi	r24, 0x00	; 0
     6b2:	e8 cf       	rjmp	.-48     	; 0x684 <GLCD_FillScreen>
     6b4:	08 95       	ret

000006b6 <GLCD_SetFont>:
     6b6:	66 23       	and	r22, r22
     6b8:	e4 f0       	brlt	.+56     	; 0x6f2 <GLCD_SetFont+0x3c>
     6ba:	40 34       	cpi	r20, 0x40	; 64
     6bc:	d0 f4       	brcc	.+52     	; 0x6f2 <GLCD_SetFont+0x3c>
     6be:	22 30       	cpi	r18, 0x02	; 2
     6c0:	c0 f4       	brcc	.+48     	; 0x6f2 <GLCD_SetFont+0x3c>
     6c2:	ec e5       	ldi	r30, 0x5C	; 92
     6c4:	f1 e0       	ldi	r31, 0x01	; 1
     6c6:	94 83       	std	Z+4, r25	; 0x04
     6c8:	83 83       	std	Z+3, r24	; 0x03
     6ca:	65 83       	std	Z+5, r22	; 0x05
     6cc:	46 83       	std	Z+6, r20	; 0x06
     6ce:	50 e0       	ldi	r21, 0x00	; 0
     6d0:	41 50       	subi	r20, 0x01	; 1
     6d2:	51 09       	sbc	r21, r1
     6d4:	ca 01       	movw	r24, r20
     6d6:	99 23       	and	r25, r25
     6d8:	0c f4       	brge	.+2      	; 0x6dc <GLCD_SetFont+0x26>
     6da:	07 96       	adiw	r24, 0x07	; 7
     6dc:	95 95       	asr	r25
     6de:	87 95       	ror	r24
     6e0:	95 95       	asr	r25
     6e2:	87 95       	ror	r24
     6e4:	95 95       	asr	r25
     6e6:	87 95       	ror	r24
     6e8:	ec e5       	ldi	r30, 0x5C	; 92
     6ea:	f1 e0       	ldi	r31, 0x01	; 1
     6ec:	8f 5f       	subi	r24, 0xFF	; 255
     6ee:	87 83       	std	Z+7, r24	; 0x07
     6f0:	20 87       	std	Z+8, r18	; 0x08
     6f2:	08 95       	ret

000006f4 <GLCD_PrintChar>:
     6f4:	4f 92       	push	r4
     6f6:	5f 92       	push	r5
     6f8:	6f 92       	push	r6
     6fa:	7f 92       	push	r7
     6fc:	8f 92       	push	r8
     6fe:	9f 92       	push	r9
     700:	af 92       	push	r10
     702:	bf 92       	push	r11
     704:	cf 92       	push	r12
     706:	df 92       	push	r13
     708:	ef 92       	push	r14
     70a:	ff 92       	push	r15
     70c:	0f 93       	push	r16
     70e:	1f 93       	push	r17
     710:	cf 93       	push	r28
     712:	df 93       	push	r29
     714:	ac e5       	ldi	r26, 0x5C	; 92
     716:	b1 e0       	ldi	r27, 0x01	; 1
     718:	5c 90       	ld	r5, X
     71a:	11 96       	adiw	r26, 0x01	; 1
     71c:	4c 90       	ld	r4, X
     71e:	11 97       	sbiw	r26, 0x01	; 1
     720:	80 52       	subi	r24, 0x20	; 32
     722:	15 96       	adiw	r26, 0x05	; 5
     724:	9c 91       	ld	r25, X
     726:	15 97       	sbiw	r26, 0x05	; 5
     728:	17 96       	adiw	r26, 0x07	; 7
     72a:	2c 91       	ld	r18, X
     72c:	17 97       	sbiw	r26, 0x07	; 7
     72e:	92 9f       	mul	r25, r18
     730:	90 01       	movw	r18, r0
     732:	11 24       	eor	r1, r1
     734:	2f 5f       	subi	r18, 0xFF	; 255
     736:	3f 4f       	sbci	r19, 0xFF	; 255
     738:	82 9f       	mul	r24, r18
     73a:	a0 01       	movw	r20, r0
     73c:	83 9f       	mul	r24, r19
     73e:	50 0d       	add	r21, r0
     740:	11 24       	eor	r1, r1
     742:	13 96       	adiw	r26, 0x03	; 3
     744:	ed 91       	ld	r30, X+
     746:	fc 91       	ld	r31, X
     748:	14 97       	sbiw	r26, 0x04	; 4
     74a:	5a 01       	movw	r10, r20
     74c:	8f ef       	ldi	r24, 0xFF	; 255
     74e:	a8 1a       	sub	r10, r24
     750:	b8 0a       	sbc	r11, r24
     752:	e4 0f       	add	r30, r20
     754:	f5 1f       	adc	r31, r21
     756:	74 90       	lpm	r7, Z
     758:	84 2d       	mov	r24, r4
     75a:	87 70       	andi	r24, 0x07	; 7
     75c:	98 2e       	mov	r9, r24
     75e:	64 2c       	mov	r6, r4
     760:	81 2c       	mov	r8, r1
     762:	5b c0       	rjmp	.+182    	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     764:	66 2d       	mov	r22, r6
     766:	85 2d       	mov	r24, r5
     768:	44 df       	rcall	.-376    	; 0x5f2 <GLCD_GotoXY>
     76a:	75 01       	movw	r14, r10
     76c:	e8 0c       	add	r14, r8
     76e:	f1 1c       	adc	r15, r1
     770:	67 01       	movw	r12, r14
     772:	81 e0       	ldi	r24, 0x01	; 1
     774:	c8 1a       	sub	r12, r24
     776:	d1 08       	sbc	r13, r1
     778:	10 e0       	ldi	r17, 0x00	; 0
     77a:	3f c0       	rjmp	.+126    	; 0x7fa <GLCD_PrintChar+0x106>
     77c:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <__GLCD+0x3>
     780:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <__GLCD+0x4>
     784:	fc 01       	movw	r30, r24
     786:	ee 0d       	add	r30, r14
     788:	ff 1d       	adc	r31, r15
     78a:	24 91       	lpm	r18, Z
     78c:	49 2d       	mov	r20, r9
     78e:	50 e0       	ldi	r21, 0x00	; 0
     790:	30 e0       	ldi	r19, 0x00	; 0
     792:	09 2c       	mov	r0, r9
     794:	02 c0       	rjmp	.+4      	; 0x79a <GLCD_PrintChar+0xa6>
     796:	22 0f       	add	r18, r18
     798:	33 1f       	adc	r19, r19
     79a:	0a 94       	dec	r0
     79c:	e2 f7       	brpl	.-8      	; 0x796 <GLCD_PrintChar+0xa2>
     79e:	02 2f       	mov	r16, r18
     7a0:	88 20       	and	r8, r8
     7a2:	a1 f0       	breq	.+40     	; 0x7cc <GLCD_PrintChar+0xd8>
     7a4:	fc 01       	movw	r30, r24
     7a6:	ec 0d       	add	r30, r12
     7a8:	fd 1d       	adc	r31, r13
     7aa:	e4 91       	lpm	r30, Z
     7ac:	88 e0       	ldi	r24, 0x08	; 8
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	84 1b       	sub	r24, r20
     7b2:	95 0b       	sbc	r25, r21
     7b4:	f0 e0       	ldi	r31, 0x00	; 0
     7b6:	02 c0       	rjmp	.+4      	; 0x7bc <GLCD_PrintChar+0xc8>
     7b8:	f5 95       	asr	r31
     7ba:	e7 95       	ror	r30
     7bc:	8a 95       	dec	r24
     7be:	e2 f7       	brpl	.-8      	; 0x7b8 <GLCD_PrintChar+0xc4>
     7c0:	0e 2f       	mov	r16, r30
     7c2:	02 2b       	or	r16, r18
     7c4:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <__GLCD+0x7>
     7c8:	c8 0e       	add	r12, r24
     7ca:	d1 1c       	adc	r13, r1
     7cc:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <__GLCD+0x8>
     7d0:	81 30       	cpi	r24, 0x01	; 1
     7d2:	31 f4       	brne	.+12     	; 0x7e0 <GLCD_PrintChar+0xec>
     7d4:	ec e5       	ldi	r30, 0x5C	; 92
     7d6:	f1 e0       	ldi	r31, 0x01	; 1
     7d8:	61 81       	ldd	r22, Z+1	; 0x01
     7da:	80 81       	ld	r24, Z
     7dc:	d6 dd       	rcall	.-1108   	; 0x38a <GLCD_BufferRead>
     7de:	08 2b       	or	r16, r24
     7e0:	cc e5       	ldi	r28, 0x5C	; 92
     7e2:	d1 e0       	ldi	r29, 0x01	; 1
     7e4:	69 81       	ldd	r22, Y+1	; 0x01
     7e6:	88 81       	ld	r24, Y
     7e8:	91 e0       	ldi	r25, 0x01	; 1
     7ea:	98 0f       	add	r25, r24
     7ec:	98 83       	st	Y, r25
     7ee:	40 2f       	mov	r20, r16
     7f0:	be dd       	rcall	.-1156   	; 0x36e <GLCD_BufferWrite>
     7f2:	8f 81       	ldd	r24, Y+7	; 0x07
     7f4:	e8 0e       	add	r14, r24
     7f6:	f1 1c       	adc	r15, r1
     7f8:	1f 5f       	subi	r17, 0xFF	; 255
     7fa:	17 15       	cp	r17, r7
     7fc:	08 f4       	brcc	.+2      	; 0x800 <__DATA_REGION_LENGTH__>
     7fe:	be cf       	rjmp	.-132    	; 0x77c <GLCD_PrintChar+0x88>
     800:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <__GLCD+0x8>
     804:	81 11       	cpse	r24, r1
     806:	06 c0       	rjmp	.+12     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     808:	ec e5       	ldi	r30, 0x5C	; 92
     80a:	f1 e0       	ldi	r31, 0x01	; 1
     80c:	40 e0       	ldi	r20, 0x00	; 0
     80e:	61 81       	ldd	r22, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	ad dd       	rcall	.-1190   	; 0x36e <GLCD_BufferWrite>
     814:	88 e0       	ldi	r24, 0x08	; 8
     816:	68 0e       	add	r6, r24
     818:	83 94       	inc	r8
     81a:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <__GLCD+0x7>
     81e:	88 16       	cp	r8, r24
     820:	08 f4       	brcc	.+2      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     822:	a0 cf       	rjmp	.-192    	; 0x764 <GLCD_PrintChar+0x70>
     824:	24 2d       	mov	r18, r4
     826:	26 95       	lsr	r18
     828:	26 95       	lsr	r18
     82a:	26 95       	lsr	r18
     82c:	30 e0       	ldi	r19, 0x00	; 0
     82e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__GLCD+0x6>
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	84 0d       	add	r24, r4
     836:	91 1d       	adc	r25, r1
     838:	01 97       	sbiw	r24, 0x01	; 1
     83a:	ac 01       	movw	r20, r24
     83c:	12 f4       	brpl	.+4      	; 0x842 <__DATA_REGION_LENGTH__+0x42>
     83e:	49 5f       	subi	r20, 0xF9	; 249
     840:	5f 4f       	sbci	r21, 0xFF	; 255
     842:	55 95       	asr	r21
     844:	47 95       	ror	r20
     846:	55 95       	asr	r21
     848:	47 95       	ror	r20
     84a:	55 95       	asr	r21
     84c:	47 95       	ror	r20
     84e:	24 17       	cp	r18, r20
     850:	35 07       	cpc	r19, r21
     852:	09 f4       	brne	.+2      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     854:	41 c0       	rjmp	.+130    	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     856:	8f e3       	ldi	r24, 0x3F	; 63
     858:	86 15       	cp	r24, r6
     85a:	08 f4       	brcc	.+2      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     85c:	3d c0       	rjmp	.+122    	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     85e:	66 2d       	mov	r22, r6
     860:	85 2d       	mov	r24, r5
     862:	c7 de       	rcall	.-626    	; 0x5f2 <GLCD_GotoXY>
     864:	a8 0c       	add	r10, r8
     866:	b1 1c       	adc	r11, r1
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	a8 1a       	sub	r10, r24
     86c:	b1 08       	sbc	r11, r1
     86e:	00 e0       	ldi	r16, 0x00	; 0
     870:	27 c0       	rjmp	.+78     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
     872:	cc e5       	ldi	r28, 0x5C	; 92
     874:	d1 e0       	ldi	r29, 0x01	; 1
     876:	f9 80       	ldd	r15, Y+1	; 0x01
     878:	18 81       	ld	r17, Y
     87a:	6f 2d       	mov	r22, r15
     87c:	81 2f       	mov	r24, r17
     87e:	85 dd       	rcall	.-1270   	; 0x38a <GLCD_BufferRead>
     880:	eb 81       	ldd	r30, Y+3	; 0x03
     882:	fc 81       	ldd	r31, Y+4	; 0x04
     884:	ea 0d       	add	r30, r10
     886:	fb 1d       	adc	r31, r11
     888:	44 91       	lpm	r20, Z
     88a:	28 e0       	ldi	r18, 0x08	; 8
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	29 19       	sub	r18, r9
     890:	31 09       	sbc	r19, r1
     892:	50 e0       	ldi	r21, 0x00	; 0
     894:	02 c0       	rjmp	.+4      	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
     896:	55 95       	asr	r21
     898:	47 95       	ror	r20
     89a:	2a 95       	dec	r18
     89c:	e2 f7       	brpl	.-8      	; 0x896 <__DATA_REGION_LENGTH__+0x96>
     89e:	48 2b       	or	r20, r24
     8a0:	98 85       	ldd	r25, Y+8	; 0x08
     8a2:	91 30       	cpi	r25, 0x01	; 1
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
     8a6:	48 2b       	or	r20, r24
     8a8:	cc e5       	ldi	r28, 0x5C	; 92
     8aa:	d1 e0       	ldi	r29, 0x01	; 1
     8ac:	81 e0       	ldi	r24, 0x01	; 1
     8ae:	81 0f       	add	r24, r17
     8b0:	88 83       	st	Y, r24
     8b2:	6f 2d       	mov	r22, r15
     8b4:	81 2f       	mov	r24, r17
     8b6:	5b dd       	rcall	.-1354   	; 0x36e <GLCD_BufferWrite>
     8b8:	8f 81       	ldd	r24, Y+7	; 0x07
     8ba:	a8 0e       	add	r10, r24
     8bc:	b1 1c       	adc	r11, r1
     8be:	0f 5f       	subi	r16, 0xFF	; 255
     8c0:	07 15       	cp	r16, r7
     8c2:	b8 f2       	brcs	.-82     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
     8c4:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <__GLCD+0x8>
     8c8:	81 11       	cpse	r24, r1
     8ca:	06 c0       	rjmp	.+12     	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     8cc:	ec e5       	ldi	r30, 0x5C	; 92
     8ce:	f1 e0       	ldi	r31, 0x01	; 1
     8d0:	40 e0       	ldi	r20, 0x00	; 0
     8d2:	61 81       	ldd	r22, Z+1	; 0x01
     8d4:	80 81       	ld	r24, Z
     8d6:	4b dd       	rcall	.-1386   	; 0x36e <GLCD_BufferWrite>
     8d8:	85 2d       	mov	r24, r5
     8da:	87 0d       	add	r24, r7
     8dc:	64 2d       	mov	r22, r4
     8de:	8f 5f       	subi	r24, 0xFF	; 255
     8e0:	88 de       	rcall	.-752    	; 0x5f2 <GLCD_GotoXY>
     8e2:	df 91       	pop	r29
     8e4:	cf 91       	pop	r28
     8e6:	1f 91       	pop	r17
     8e8:	0f 91       	pop	r16
     8ea:	ff 90       	pop	r15
     8ec:	ef 90       	pop	r14
     8ee:	df 90       	pop	r13
     8f0:	cf 90       	pop	r12
     8f2:	bf 90       	pop	r11
     8f4:	af 90       	pop	r10
     8f6:	9f 90       	pop	r9
     8f8:	8f 90       	pop	r8
     8fa:	7f 90       	pop	r7
     8fc:	6f 90       	pop	r6
     8fe:	5f 90       	pop	r5
     900:	4f 90       	pop	r4
     902:	08 95       	ret

00000904 <GLCD_PrintString>:
     904:	cf 93       	push	r28
     906:	df 93       	push	r29
     908:	ec 01       	movw	r28, r24
     90a:	0c c0       	rjmp	.+24     	; 0x924 <GLCD_PrintString+0x20>
     90c:	ec e5       	ldi	r30, 0x5C	; 92
     90e:	f1 e0       	ldi	r31, 0x01	; 1
     910:	90 81       	ld	r25, Z
     912:	25 81       	ldd	r18, Z+5	; 0x05
     914:	30 e0       	ldi	r19, 0x00	; 0
     916:	29 0f       	add	r18, r25
     918:	31 1d       	adc	r19, r1
     91a:	20 38       	cpi	r18, 0x80	; 128
     91c:	31 05       	cpc	r19, r1
     91e:	2c f4       	brge	.+10     	; 0x92a <GLCD_PrintString+0x26>
     920:	21 96       	adiw	r28, 0x01	; 1
     922:	e8 de       	rcall	.-560    	; 0x6f4 <GLCD_PrintChar>
     924:	88 81       	ld	r24, Y
     926:	81 11       	cpse	r24, r1
     928:	f1 cf       	rjmp	.-30     	; 0x90c <GLCD_PrintString+0x8>
     92a:	df 91       	pop	r29
     92c:	cf 91       	pop	r28
     92e:	08 95       	ret

00000930 <GLCD_PrintInteger>:

void GLCD_PrintInteger(const int32_t Value)
{
     930:	0f 93       	push	r16
     932:	1f 93       	push	r17
     934:	cf 93       	push	r28
     936:	df 93       	push	r29
     938:	cd b7       	in	r28, 0x3d	; 61
     93a:	de b7       	in	r29, 0x3e	; 62
     93c:	2c 97       	sbiw	r28, 0x0c	; 12
     93e:	0f b6       	in	r0, 0x3f	; 63
     940:	f8 94       	cli
     942:	de bf       	out	0x3e, r29	; 62
     944:	0f be       	out	0x3f, r0	; 63
     946:	cd bf       	out	0x3d, r28	; 61
	if (Value == 0)
     948:	61 15       	cp	r22, r1
     94a:	71 05       	cpc	r23, r1
     94c:	81 05       	cpc	r24, r1
     94e:	91 05       	cpc	r25, r1
     950:	19 f4       	brne	.+6      	; 0x958 <GLCD_PrintInteger+0x28>
	{
		GLCD_PrintChar('0');
     952:	80 e3       	ldi	r24, 0x30	; 48
     954:	cf de       	rcall	.-610    	; 0x6f4 <GLCD_PrintChar>
     956:	12 c0       	rjmp	.+36     	; 0x97c <GLCD_PrintInteger+0x4c>
	}
	else if ((Value > INT32_MIN) && (Value <= INT32_MAX))
     958:	61 15       	cp	r22, r1
     95a:	71 05       	cpc	r23, r1
     95c:	81 05       	cpc	r24, r1
     95e:	20 e8       	ldi	r18, 0x80	; 128
     960:	92 07       	cpc	r25, r18
     962:	61 f0       	breq	.+24     	; 0x97c <GLCD_PrintInteger+0x4c>
	{
		//int32_max_bytes + sign + null = 12 bytes
		char bcd[12] = { '\0' };
     964:	8e 01       	movw	r16, r28
     966:	0f 5f       	subi	r16, 0xFF	; 255
     968:	1f 4f       	sbci	r17, 0xFF	; 255
     96a:	2c e0       	ldi	r18, 0x0C	; 12
     96c:	f8 01       	movw	r30, r16
     96e:	11 92       	st	Z+, r1
     970:	2a 95       	dec	r18
     972:	e9 f7       	brne	.-6      	; 0x96e <GLCD_PrintInteger+0x3e>
		
		//Convert integer to array
		Int2bcd(Value, bcd);
     974:	a8 01       	movw	r20, r16
     976:	17 dd       	rcall	.-1490   	; 0x3a6 <Int2bcd>
		
		//Print from first non-zero digit
		GLCD_PrintString(bcd);
     978:	c8 01       	movw	r24, r16
     97a:	c4 df       	rcall	.-120    	; 0x904 <GLCD_PrintString>
     97c:	2c 96       	adiw	r28, 0x0c	; 12
	}
}
     97e:	0f b6       	in	r0, 0x3f	; 63
     980:	f8 94       	cli
     982:	de bf       	out	0x3e, r29	; 62
     984:	0f be       	out	0x3f, r0	; 63
     986:	cd bf       	out	0x3d, r28	; 61
     988:	df 91       	pop	r29
     98a:	cf 91       	pop	r28
     98c:	1f 91       	pop	r17
     98e:	0f 91       	pop	r16
     990:	08 95       	ret

00000992 <TWI_Setup>:
//----- Functions -------------//
//Setup TWI hardwarw.
void TWI_Setup(void)
{
	//TWI pins as outputs
	PinMode(TWI_SDA, Output);
     992:	87 b1       	in	r24, 0x07	; 7
     994:	82 60       	ori	r24, 0x02	; 2
     996:	87 b9       	out	0x07, r24	; 7
	PinMode(TWI_SCL, Output);
     998:	87 b1       	in	r24, 0x07	; 7
     99a:	81 60       	ori	r24, 0x01	; 1
     99c:	87 b9       	out	0x07, r24	; 7
	//Activate internal pull-up resistors
	DigitalWrite(TWI_SDA, High);
     99e:	88 b1       	in	r24, 0x08	; 8
     9a0:	82 60       	ori	r24, 0x02	; 2
     9a2:	88 b9       	out	0x08, r24	; 8
	DigitalWrite(TWI_SCL, High);
     9a4:	88 b1       	in	r24, 0x08	; 8
     9a6:	81 60       	ori	r24, 0x01	; 1
     9a8:	88 b9       	out	0x08, r24	; 8

	//Initialize TWI prescaler and bit rate
	TWSR = 0x00;	//Prescaler = 1
     9aa:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR = (uint8_t)(((F_CPU / F_SCL) - 16) / 2);
     9ae:	8c e0       	ldi	r24, 0x0C	; 12
     9b0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
	//F_SCL = F_CPU / (16 + 2 * TWBR * PRESCALER)
	//TWBR = ((F_CPU / F_SCL) - 16) / (2 * PRESCALER)

	//Enable TWI  module
	TWCR = (1<<TWEN);
     9b4:	84 e0       	ldi	r24, 0x04	; 4
     9b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9ba:	08 95       	ret

000009bc <TWI_Status>:
}

//Get TWI status. 
uint8_t TWI_Status(void)
{
	return (TWSR & 0xF8);
     9bc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
}
     9c0:	88 7f       	andi	r24, 0xF8	; 248
     9c2:	08 95       	ret

000009c4 <TWI_BeginTransmission>:

//Begin TWI transmission. 
uint8_t TWI_BeginTransmission(void)
{
	//Transmit START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     9c4:	84 ea       	ldi	r24, 0xA4	; 164
     9c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait for TWINT Flag set. This indicates that
	//the START condition has been transmitted.
	while (!BitCheck(TWCR, TWINT));
     9ca:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9ce:	88 23       	and	r24, r24
     9d0:	e4 f7       	brge	.-8      	; 0x9ca <TWI_BeginTransmission+0x6>

	//Return status register
	return (TWI_Status());
     9d2:	f4 cf       	rjmp	.-24     	; 0x9bc <TWI_Status>
}
     9d4:	08 95       	ret

000009d6 <TWI_EndTransmission>:

//End TWI transmission. 
void TWI_EndTransmission(void)
{
	//Transmit STOP condition
	TWCR = (1<<TWEN) | (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWSTO);
     9d6:	85 ed       	ldi	r24, 0xD5	; 213
     9d8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait for stop condition to be executed on bus
	//TWINT is not set after a stop condition!
	while(BitCheck(TWCR, TWSTO));
     9dc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9e0:	84 fd       	sbrc	r24, 4
     9e2:	fc cf       	rjmp	.-8      	; 0x9dc <TWI_EndTransmission+0x6>
}
     9e4:	08 95       	ret

000009e6 <TWI_Transmit>:

//Transmit data. 
uint8_t TWI_Transmit(const uint8_t Data)
{
	//Data to be transmitted
	TWDR = Data;
     9e6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>

	//Start transmission
	TWCR = (1<<TWINT) | (1<<TWEN);
     9ea:	84 e8       	ldi	r24, 0x84	; 132
     9ec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait data to be shifted
	while (!BitCheck(TWCR, TWINT));
     9f0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9f4:	88 23       	and	r24, r24
     9f6:	e4 f7       	brge	.-8      	; 0x9f0 <TWI_Transmit+0xa>

	//Return status register
	return (TWI_Status());
     9f8:	e1 cf       	rjmp	.-62     	; 0x9bc <TWI_Status>
}
     9fa:	08 95       	ret

000009fc <_Z12ConfigureADCv>:
	itoa(data,st,10);
	GLCD_PrintString(st);
}

void oled_intial()
{
     9fc:	83 e4       	ldi	r24, 0x43	; 67
     9fe:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     a02:	8f ea       	ldi	r24, 0xAF	; 175
     a04:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     a08:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
     a0c:	88 e0       	ldi	r24, 0x08	; 8
     a0e:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
     a12:	78 94       	sei
     a14:	08 95       	ret

00000a16 <_Z18StartConversionADCv>:
     a16:	ea e7       	ldi	r30, 0x7A	; 122
     a18:	f0 e0       	ldi	r31, 0x00	; 0
     a1a:	80 81       	ld	r24, Z
     a1c:	80 64       	ori	r24, 0x40	; 64
     a1e:	80 83       	st	Z, r24
     a20:	08 95       	ret

00000a22 <_Z8setupPWMv>:
	OCR0A = (dutyCycle/100.0)*255;
}

void setupPWM()
{
	DDRD = (1<<PORTD6);
     a22:	80 e4       	ldi	r24, 0x40	; 64
     a24:	8a b9       	out	0x0a, r24	; 10
	TCCR0A = (1 << COM0A1) | (1 << WGM00) | (1 << WGM01);
     a26:	83 e8       	ldi	r24, 0x83	; 131
     a28:	84 bd       	out	0x24, r24	; 36
	TIMSK0 = (1 << TOIE0);
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	OCR0A = (dutyCycle/100.0)*255.0;
     a30:	20 e0       	ldi	r18, 0x00	; 0
     a32:	30 e0       	ldi	r19, 0x00	; 0
     a34:	48 ec       	ldi	r20, 0xC8	; 200
     a36:	52 e4       	ldi	r21, 0x42	; 66
     a38:	60 91 48 01 	lds	r22, 0x0148	; 0x800148 <dutyCycle>
     a3c:	70 91 49 01 	lds	r23, 0x0149	; 0x800149 <dutyCycle+0x1>
     a40:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <dutyCycle+0x2>
     a44:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <dutyCycle+0x3>
     a48:	cb d1       	rcall	.+918    	; 0xde0 <__divsf3>
     a4a:	20 e0       	ldi	r18, 0x00	; 0
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	4f e7       	ldi	r20, 0x7F	; 127
     a50:	53 e4       	ldi	r21, 0x43	; 67
     a52:	ed d2       	rcall	.+1498   	; 0x102e <__mulsf3>
     a54:	32 d2       	rcall	.+1124   	; 0xeba <__fixunssfsi>
     a56:	67 bd       	out	0x27, r22	; 39
	sei();
     a58:	78 94       	sei
	TCCR0B = (1 << CS00) | (1 << CS02);
     a5a:	85 e0       	ldi	r24, 0x05	; 5
     a5c:	85 bd       	out	0x25, r24	; 37
     a5e:	08 95       	ret

00000a60 <_Z7tempPIDv>:
}

void tempPID()
{
     a60:	cf 92       	push	r12
     a62:	df 92       	push	r13
     a64:	ef 92       	push	r14
     a66:	ff 92       	push	r15
     a68:	cf 93       	push	r28
     a6a:	df 93       	push	r29
	//value conversion;
	
	error = (-1*enc) - sensorValue; // Getting the temperature error between set value and the iron temperature value
     a6c:	c0 91 52 01 	lds	r28, 0x0152	; 0x800152 <enc>
     a70:	d0 91 53 01 	lds	r29, 0x0153	; 0x800153 <enc+0x1>
     a74:	d1 95       	neg	r29
     a76:	c1 95       	neg	r28
     a78:	d1 09       	sbc	r29, r1
     a7a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <sensorValue>
     a7e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <sensorValue+0x1>
     a82:	c8 1b       	sub	r28, r24
     a84:	d9 0b       	sbc	r29, r25
     a86:	d0 93 4d 01 	sts	0x014D, r29	; 0x80014d <error+0x1>
     a8a:	c0 93 4c 01 	sts	0x014C, r28	; 0x80014c <error>
	pWM = kp*error + ki*(error-lastError);//PID Equation 
     a8e:	be 01       	movw	r22, r28
     a90:	0d 2e       	mov	r0, r29
     a92:	00 0c       	add	r0, r0
     a94:	88 0b       	sbc	r24, r24
     a96:	99 0b       	sbc	r25, r25
     a98:	3e d2       	rcall	.+1148   	; 0xf16 <__floatsisf>
     a9a:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <kp>
     a9e:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <kp+0x1>
     aa2:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <kp+0x2>
     aa6:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <kp+0x3>
     aaa:	c1 d2       	rcall	.+1410   	; 0x102e <__mulsf3>
     aac:	6b 01       	movw	r12, r22
     aae:	7c 01       	movw	r14, r24
     ab0:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <lastError>
     ab4:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <lastError+0x1>
     ab8:	be 01       	movw	r22, r28
     aba:	68 1b       	sub	r22, r24
     abc:	79 0b       	sbc	r23, r25
     abe:	07 2e       	mov	r0, r23
     ac0:	00 0c       	add	r0, r0
     ac2:	88 0b       	sbc	r24, r24
     ac4:	99 0b       	sbc	r25, r25
     ac6:	27 d2       	rcall	.+1102   	; 0xf16 <__floatsisf>
     ac8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     acc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ad0:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     ad4:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     ad8:	aa d2       	rcall	.+1364   	; 0x102e <__mulsf3>
     ada:	9b 01       	movw	r18, r22
     adc:	ac 01       	movw	r20, r24
     ade:	c7 01       	movw	r24, r14
     ae0:	b6 01       	movw	r22, r12
     ae2:	1a d1       	rcall	.+564    	; 0xd18 <__addsf3>
     ae4:	e5 d1       	rcall	.+970    	; 0xeb0 <__fixsfsi>
     ae6:	70 93 4f 01 	sts	0x014F, r23	; 0x80014f <pWM+0x1>
     aea:	60 93 4e 01 	sts	0x014E, r22	; 0x80014e <pWM>
	if(pWM > 100 || pWM < 0)
     aee:	65 36       	cpi	r22, 0x65	; 101
     af0:	71 05       	cpc	r23, r1
     af2:	28 f0       	brcs	.+10     	; 0xafe <_Z7tempPIDv+0x9e>
	{
		pWM = 0;
     af4:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <pWM+0x1>
     af8:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <pWM>
	}
	else
	{
		dutyCycle = pWM;	
     afc:	0d c0       	rjmp	.+26     	; 0xb18 <_Z7tempPIDv+0xb8>
     afe:	07 2e       	mov	r0, r23
     b00:	00 0c       	add	r0, r0
     b02:	88 0b       	sbc	r24, r24
     b04:	99 0b       	sbc	r25, r25
     b06:	07 d2       	rcall	.+1038   	; 0xf16 <__floatsisf>
     b08:	60 93 48 01 	sts	0x0148, r22	; 0x800148 <dutyCycle>
     b0c:	70 93 49 01 	sts	0x0149, r23	; 0x800149 <dutyCycle+0x1>
     b10:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <dutyCycle+0x2>
     b14:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <dutyCycle+0x3>
	}
	lastError = error;
     b18:	d0 93 51 01 	sts	0x0151, r29	; 0x800151 <lastError+0x1>
     b1c:	c0 93 50 01 	sts	0x0150, r28	; 0x800150 <lastError>
}
     b20:	df 91       	pop	r29
     b22:	cf 91       	pop	r28
     b24:	ff 90       	pop	r15
     b26:	ef 90       	pop	r14
     b28:	df 90       	pop	r13
     b2a:	cf 90       	pop	r12
     b2c:	08 95       	ret

00000b2e <__vector_16>:
	
}
//////////////////////////////////
//PWM//
ISR(TIMER0_OVF_vect)
{
     b2e:	1f 92       	push	r1
     b30:	0f 92       	push	r0
     b32:	0f b6       	in	r0, 0x3f	; 63
     b34:	0f 92       	push	r0
     b36:	11 24       	eor	r1, r1
     b38:	2f 93       	push	r18
     b3a:	3f 93       	push	r19
     b3c:	4f 93       	push	r20
     b3e:	5f 93       	push	r21
     b40:	6f 93       	push	r22
     b42:	7f 93       	push	r23
     b44:	8f 93       	push	r24
     b46:	9f 93       	push	r25
     b48:	af 93       	push	r26
     b4a:	bf 93       	push	r27
     b4c:	ef 93       	push	r30
     b4e:	ff 93       	push	r31
	tempPID();
     b50:	87 df       	rcall	.-242    	; 0xa60 <_Z7tempPIDv>
	OCR0A = (dutyCycle/100.0)*255;
     b52:	20 e0       	ldi	r18, 0x00	; 0
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	48 ec       	ldi	r20, 0xC8	; 200
     b58:	52 e4       	ldi	r21, 0x42	; 66
     b5a:	60 91 48 01 	lds	r22, 0x0148	; 0x800148 <dutyCycle>
     b5e:	70 91 49 01 	lds	r23, 0x0149	; 0x800149 <dutyCycle+0x1>
     b62:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <dutyCycle+0x2>
     b66:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <dutyCycle+0x3>
     b6a:	3a d1       	rcall	.+628    	; 0xde0 <__divsf3>
     b6c:	20 e0       	ldi	r18, 0x00	; 0
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	4f e7       	ldi	r20, 0x7F	; 127
     b72:	53 e4       	ldi	r21, 0x43	; 67
     b74:	5c d2       	rcall	.+1208   	; 0x102e <__mulsf3>
     b76:	a1 d1       	rcall	.+834    	; 0xeba <__fixunssfsi>
     b78:	67 bd       	out	0x27, r22	; 39
}
     b7a:	ff 91       	pop	r31
     b7c:	ef 91       	pop	r30
     b7e:	bf 91       	pop	r27
     b80:	af 91       	pop	r26
     b82:	9f 91       	pop	r25
     b84:	8f 91       	pop	r24
     b86:	7f 91       	pop	r23
     b88:	6f 91       	pop	r22
     b8a:	5f 91       	pop	r21
     b8c:	4f 91       	pop	r20
     b8e:	3f 91       	pop	r19
     b90:	2f 91       	pop	r18
     b92:	0f 90       	pop	r0
     b94:	0f be       	out	0x3f, r0	; 63
     b96:	0f 90       	pop	r0
     b98:	1f 90       	pop	r1
     b9a:	18 95       	reti

00000b9c <_Z8ironBOOTv>:
}

//Functions//
void ironBOOT()//Staring the MCU and the OLED
{
	CLKPR = 0x80;
     b9c:	e1 e6       	ldi	r30, 0x61	; 97
     b9e:	f0 e0       	ldi	r31, 0x00	; 0
     ba0:	80 e8       	ldi	r24, 0x80	; 128
     ba2:	80 83       	st	Z, r24
	CLKPR = 0x00;
     ba4:	10 82       	st	Z, r1
	void oled_intial();
	GLCD_Setup();
     ba6:	2c dd       	rcall	.-1448   	; 0x600 <GLCD_Setup>
	GLCD_SetFont(Font5x8, 5, 8, GLCD_Overwrite);
     ba8:	20 e0       	ldi	r18, 0x00	; 0
     baa:	48 e0       	ldi	r20, 0x08	; 8
     bac:	65 e0       	ldi	r22, 0x05	; 5
     bae:	88 e6       	ldi	r24, 0x68	; 104
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	81 dd       	rcall	.-1278   	; 0x6b6 <GLCD_SetFont>
	GLCD_GotoXY(0, 0);
     bb4:	60 e0       	ldi	r22, 0x00	; 0
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	1c dd       	rcall	.-1480   	; 0x5f2 <GLCD_GotoXY>
	GLCD_PrintString("Soldering Station");
     bba:	88 e0       	ldi	r24, 0x08	; 8
     bbc:	91 e0       	ldi	r25, 0x01	; 1
     bbe:	a2 de       	rcall	.-700    	; 0x904 <GLCD_PrintString>
	GLCD_GotoXY(0,16);
     bc0:	60 e1       	ldi	r22, 0x10	; 16
     bc2:	80 e0       	ldi	r24, 0x00	; 0
     bc4:	16 dd       	rcall	.-1492   	; 0x5f2 <GLCD_GotoXY>
     bc6:	ee dc       	rcall	.-1572   	; 0x5a4 <GLCD_Render>
	//GLCD_InvertScreen();
	GLCD_Render();
     bc8:	2f ef       	ldi	r18, 0xFF	; 255
     bca:	89 e6       	ldi	r24, 0x69	; 105
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bcc:	98 e1       	ldi	r25, 0x18	; 24
     bce:	21 50       	subi	r18, 0x01	; 1
     bd0:	80 40       	sbci	r24, 0x00	; 0
     bd2:	90 40       	sbci	r25, 0x00	; 0
     bd4:	e1 f7       	brne	.-8      	; 0xbce <_Z8ironBOOTv+0x32>
     bd6:	00 c0       	rjmp	.+0      	; 0xbd8 <_Z8ironBOOTv+0x3c>
     bd8:	00 00       	nop
     bda:	08 95       	ret

00000bdc <_Z7ironRUNv>:
     bdc:	60 e1       	ldi	r22, 0x10	; 16
     bde:	80 e0       	ldi	r24, 0x00	; 0
	_delay_ms(500);
}

void ironRUN()//Countinously printing values 
{
	GLCD_GotoXY(0,16);
     be0:	08 dd       	rcall	.-1520   	; 0x5f2 <GLCD_GotoXY>
	GLCD_PrintString("Iron Temperature:");
     be2:	8a e1       	ldi	r24, 0x1A	; 26
     be4:	91 e0       	ldi	r25, 0x01	; 1
     be6:	8e de       	rcall	.-740    	; 0x904 <GLCD_PrintString>
	GLCD_PrintInteger(sensorValue);
     be8:	60 91 56 01 	lds	r22, 0x0156	; 0x800156 <sensorValue>
     bec:	70 91 57 01 	lds	r23, 0x0157	; 0x800157 <sensorValue+0x1>
     bf0:	07 2e       	mov	r0, r23
     bf2:	00 0c       	add	r0, r0
     bf4:	88 0b       	sbc	r24, r24
     bf6:	99 0b       	sbc	r25, r25
     bf8:	9b de       	rcall	.-714    	; 0x930 <GLCD_PrintInteger>
	GLCD_GotoXY(0,24);
     bfa:	68 e1       	ldi	r22, 0x18	; 24
     bfc:	80 e0       	ldi	r24, 0x00	; 0
     bfe:	f9 dc       	rcall	.-1550   	; 0x5f2 <GLCD_GotoXY>
	GLCD_PrintString("Duty:");
     c00:	8c e2       	ldi	r24, 0x2C	; 44
     c02:	91 e0       	ldi	r25, 0x01	; 1
     c04:	7f de       	rcall	.-770    	; 0x904 <GLCD_PrintString>
     c06:	60 91 48 01 	lds	r22, 0x0148	; 0x800148 <dutyCycle>
	GLCD_PrintInteger(dutyCycle);
     c0a:	70 91 49 01 	lds	r23, 0x0149	; 0x800149 <dutyCycle+0x1>
     c0e:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <dutyCycle+0x2>
     c12:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <dutyCycle+0x3>
     c16:	4c d1       	rcall	.+664    	; 0xeb0 <__fixsfsi>
     c18:	8b de       	rcall	.-746    	; 0x930 <GLCD_PrintInteger>
	GLCD_GotoXY(0,32);
     c1a:	60 e2       	ldi	r22, 0x20	; 32
     c1c:	80 e0       	ldi	r24, 0x00	; 0
     c1e:	e9 dc       	rcall	.-1582   	; 0x5f2 <GLCD_GotoXY>
     c20:	82 e3       	ldi	r24, 0x32	; 50
	GLCD_PrintString("Set Temperature:");
     c22:	91 e0       	ldi	r25, 0x01	; 1
     c24:	6f de       	rcall	.-802    	; 0x904 <GLCD_PrintString>
     c26:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <enc>
	GLCD_PrintInteger(-1*enc);
     c2a:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <enc+0x1>
     c2e:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <enc+0x2>
     c32:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <enc+0x3>
     c36:	9c 01       	movw	r18, r24
     c38:	ad 01       	movw	r20, r26
     c3a:	66 27       	eor	r22, r22
     c3c:	77 27       	eor	r23, r23
     c3e:	cb 01       	movw	r24, r22
     c40:	62 1b       	sub	r22, r18
     c42:	73 0b       	sbc	r23, r19
     c44:	84 0b       	sbc	r24, r20
     c46:	95 0b       	sbc	r25, r21
     c48:	73 de       	rcall	.-794    	; 0x930 <GLCD_PrintInteger>
	GLCD_Render();
     c4a:	ac dc       	rcall	.-1704   	; 0x5a4 <GLCD_Render>
     c4c:	31 cd       	rjmp	.-1438   	; 0x6b0 <GLCD_Clear>
	GLCD_Clear();
     c4e:	08 95       	ret

00000c50 <main>:
     c50:	a5 df       	rcall	.-182    	; 0xb9c <_Z8ironBOOTv>
     c52:	d4 de       	rcall	.-600    	; 0x9fc <_Z12ConfigureADCv>
int main(void)
{
	ironBOOT();
	//Reading Analog Values From the Temperature Sensor//
	ConfigureADC();
	StartConversionADC();
     c54:	e0 de       	rcall	.-576    	; 0xa16 <_Z18StartConversionADCv>
	////////////////////////////////////
	setupPWM();
     c56:	e5 de       	rcall	.-566    	; 0xa22 <_Z8setupPWMv>
     c58:	43 db       	rcall	.-2426   	; 0x2e0 <encoder_init>
	//////////////////////////////////
	encoder_init();
     c5a:	9f b7       	in	r25, 0x3f	; 63
     c5c:	f8 94       	cli
	static inline int32_t EncoderRead(void) __attribute__((always_inline));
	static inline int32_t EncoderRead(void)
	{
		int32_t tmp;
		
		ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
     c5e:	81 e0       	ldi	r24, 0x01	; 1
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     c60:	88 23       	and	r24, r24
     c62:	51 f0       	breq	.+20     	; 0xc78 <main+0x28>
     c64:	c0 90 58 01 	lds	r12, 0x0158	; 0x800158 <EncoderSteps>
		{
			tmp = EncoderSteps;
     c68:	d0 90 59 01 	lds	r13, 0x0159	; 0x800159 <EncoderSteps+0x1>
     c6c:	e0 90 5a 01 	lds	r14, 0x015A	; 0x80015a <EncoderSteps+0x2>
     c70:	f0 90 5b 01 	lds	r15, 0x015B	; 0x80015b <EncoderSteps+0x3>
     c74:	80 e0       	ldi	r24, 0x00	; 0
     c76:	f4 cf       	rjmp	.-24     	; 0xc60 <main+0x10>
	static inline int32_t EncoderRead(void) __attribute__((always_inline));
	static inline int32_t EncoderRead(void)
	{
		int32_t tmp;
		
		ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
     c78:	9f bf       	out	0x3f, r25	; 63
     c7a:	c0 92 52 01 	sts	0x0152, r12	; 0x800152 <enc>
	//enc = EncoderRead();
	
    while (1) 
    {
		enc = EncoderRead();
     c7e:	d0 92 53 01 	sts	0x0153, r13	; 0x800153 <enc+0x1>
     c82:	e0 92 54 01 	sts	0x0154, r14	; 0x800154 <enc+0x2>
     c86:	f0 92 55 01 	sts	0x0155, r15	; 0x800155 <enc+0x3>
     c8a:	a8 df       	rcall	.-176    	; 0xbdc <_Z7ironRUNv>
		ironRUN();
     c8c:	e6 cf       	rjmp	.-52     	; 0xc5a <main+0xa>

00000c8e <_Z10analogReadv>:
     c8e:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <adc_flag>
}

void analogRead(void)//mapping temperature values
{
	
	if (adc_flag)
     c92:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <adc_flag+0x1>
     c96:	89 2b       	or	r24, r25
     c98:	61 f0       	breq	.+24     	; 0xcb2 <_Z10analogReadv+0x24>
	{
		sensorValue = adc_value;
     c9a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
     c9e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <__data_end+0x1>
     ca2:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <sensorValue+0x1>
     ca6:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <sensorValue>
		adc_flag = 0;
     caa:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <adc_flag+0x1>
     cae:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <adc_flag>
     cb2:	08 95       	ret

00000cb4 <__vector_21>:
{
	ADCSRA |= (1 << ADSC);
}

ISR(ADC_vect)
{
     cb4:	1f 92       	push	r1
     cb6:	0f 92       	push	r0
     cb8:	0f b6       	in	r0, 0x3f	; 63
     cba:	0f 92       	push	r0
     cbc:	11 24       	eor	r1, r1
     cbe:	2f 93       	push	r18
     cc0:	3f 93       	push	r19
     cc2:	4f 93       	push	r20
     cc4:	5f 93       	push	r21
     cc6:	6f 93       	push	r22
     cc8:	7f 93       	push	r23
     cca:	8f 93       	push	r24
     ccc:	9f 93       	push	r25
     cce:	af 93       	push	r26
     cd0:	bf 93       	push	r27
     cd2:	ef 93       	push	r30
     cd4:	ff 93       	push	r31
	adc_flag = 1;
     cd6:	81 e0       	ldi	r24, 0x01	; 1
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <adc_flag+0x1>
     cde:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <adc_flag>
	adc_value = ADC;
     ce2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     ce6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     cea:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <__data_end+0x1>
     cee:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end>
	analogRead();
     cf2:	cd df       	rcall	.-102    	; 0xc8e <_Z10analogReadv>
}
     cf4:	ff 91       	pop	r31
     cf6:	ef 91       	pop	r30
     cf8:	bf 91       	pop	r27
     cfa:	af 91       	pop	r26
     cfc:	9f 91       	pop	r25
     cfe:	8f 91       	pop	r24
     d00:	7f 91       	pop	r23
     d02:	6f 91       	pop	r22
     d04:	5f 91       	pop	r21
     d06:	4f 91       	pop	r20
     d08:	3f 91       	pop	r19
     d0a:	2f 91       	pop	r18
     d0c:	0f 90       	pop	r0
     d0e:	0f be       	out	0x3f, r0	; 63
     d10:	0f 90       	pop	r0
     d12:	1f 90       	pop	r1
     d14:	18 95       	reti

00000d16 <__subsf3>:
     d16:	50 58       	subi	r21, 0x80	; 128

00000d18 <__addsf3>:
     d18:	bb 27       	eor	r27, r27
     d1a:	aa 27       	eor	r26, r26
     d1c:	0e d0       	rcall	.+28     	; 0xd3a <__addsf3x>
     d1e:	4d c1       	rjmp	.+666    	; 0xfba <__fp_round>
     d20:	3e d1       	rcall	.+636    	; 0xf9e <__fp_pscA>
     d22:	30 f0       	brcs	.+12     	; 0xd30 <__addsf3+0x18>
     d24:	43 d1       	rcall	.+646    	; 0xfac <__fp_pscB>
     d26:	20 f0       	brcs	.+8      	; 0xd30 <__addsf3+0x18>
     d28:	31 f4       	brne	.+12     	; 0xd36 <__addsf3+0x1e>
     d2a:	9f 3f       	cpi	r25, 0xFF	; 255
     d2c:	11 f4       	brne	.+4      	; 0xd32 <__addsf3+0x1a>
     d2e:	1e f4       	brtc	.+6      	; 0xd36 <__addsf3+0x1e>
     d30:	33 c1       	rjmp	.+614    	; 0xf98 <__fp_nan>
     d32:	0e f4       	brtc	.+2      	; 0xd36 <__addsf3+0x1e>
     d34:	e0 95       	com	r30
     d36:	e7 fb       	bst	r30, 7
     d38:	29 c1       	rjmp	.+594    	; 0xf8c <__fp_inf>

00000d3a <__addsf3x>:
     d3a:	e9 2f       	mov	r30, r25
     d3c:	4f d1       	rcall	.+670    	; 0xfdc <__fp_split3>
     d3e:	80 f3       	brcs	.-32     	; 0xd20 <__addsf3+0x8>
     d40:	ba 17       	cp	r27, r26
     d42:	62 07       	cpc	r22, r18
     d44:	73 07       	cpc	r23, r19
     d46:	84 07       	cpc	r24, r20
     d48:	95 07       	cpc	r25, r21
     d4a:	18 f0       	brcs	.+6      	; 0xd52 <__addsf3x+0x18>
     d4c:	71 f4       	brne	.+28     	; 0xd6a <__addsf3x+0x30>
     d4e:	9e f5       	brtc	.+102    	; 0xdb6 <__addsf3x+0x7c>
     d50:	67 c1       	rjmp	.+718    	; 0x1020 <__fp_zero>
     d52:	0e f4       	brtc	.+2      	; 0xd56 <__addsf3x+0x1c>
     d54:	e0 95       	com	r30
     d56:	0b 2e       	mov	r0, r27
     d58:	ba 2f       	mov	r27, r26
     d5a:	a0 2d       	mov	r26, r0
     d5c:	0b 01       	movw	r0, r22
     d5e:	b9 01       	movw	r22, r18
     d60:	90 01       	movw	r18, r0
     d62:	0c 01       	movw	r0, r24
     d64:	ca 01       	movw	r24, r20
     d66:	a0 01       	movw	r20, r0
     d68:	11 24       	eor	r1, r1
     d6a:	ff 27       	eor	r31, r31
     d6c:	59 1b       	sub	r21, r25
     d6e:	99 f0       	breq	.+38     	; 0xd96 <__addsf3x+0x5c>
     d70:	59 3f       	cpi	r21, 0xF9	; 249
     d72:	50 f4       	brcc	.+20     	; 0xd88 <__addsf3x+0x4e>
     d74:	50 3e       	cpi	r21, 0xE0	; 224
     d76:	68 f1       	brcs	.+90     	; 0xdd2 <__addsf3x+0x98>
     d78:	1a 16       	cp	r1, r26
     d7a:	f0 40       	sbci	r31, 0x00	; 0
     d7c:	a2 2f       	mov	r26, r18
     d7e:	23 2f       	mov	r18, r19
     d80:	34 2f       	mov	r19, r20
     d82:	44 27       	eor	r20, r20
     d84:	58 5f       	subi	r21, 0xF8	; 248
     d86:	f3 cf       	rjmp	.-26     	; 0xd6e <__addsf3x+0x34>
     d88:	46 95       	lsr	r20
     d8a:	37 95       	ror	r19
     d8c:	27 95       	ror	r18
     d8e:	a7 95       	ror	r26
     d90:	f0 40       	sbci	r31, 0x00	; 0
     d92:	53 95       	inc	r21
     d94:	c9 f7       	brne	.-14     	; 0xd88 <__addsf3x+0x4e>
     d96:	7e f4       	brtc	.+30     	; 0xdb6 <__addsf3x+0x7c>
     d98:	1f 16       	cp	r1, r31
     d9a:	ba 0b       	sbc	r27, r26
     d9c:	62 0b       	sbc	r22, r18
     d9e:	73 0b       	sbc	r23, r19
     da0:	84 0b       	sbc	r24, r20
     da2:	ba f0       	brmi	.+46     	; 0xdd2 <__addsf3x+0x98>
     da4:	91 50       	subi	r25, 0x01	; 1
     da6:	a1 f0       	breq	.+40     	; 0xdd0 <__addsf3x+0x96>
     da8:	ff 0f       	add	r31, r31
     daa:	bb 1f       	adc	r27, r27
     dac:	66 1f       	adc	r22, r22
     dae:	77 1f       	adc	r23, r23
     db0:	88 1f       	adc	r24, r24
     db2:	c2 f7       	brpl	.-16     	; 0xda4 <__addsf3x+0x6a>
     db4:	0e c0       	rjmp	.+28     	; 0xdd2 <__addsf3x+0x98>
     db6:	ba 0f       	add	r27, r26
     db8:	62 1f       	adc	r22, r18
     dba:	73 1f       	adc	r23, r19
     dbc:	84 1f       	adc	r24, r20
     dbe:	48 f4       	brcc	.+18     	; 0xdd2 <__addsf3x+0x98>
     dc0:	87 95       	ror	r24
     dc2:	77 95       	ror	r23
     dc4:	67 95       	ror	r22
     dc6:	b7 95       	ror	r27
     dc8:	f7 95       	ror	r31
     dca:	9e 3f       	cpi	r25, 0xFE	; 254
     dcc:	08 f0       	brcs	.+2      	; 0xdd0 <__addsf3x+0x96>
     dce:	b3 cf       	rjmp	.-154    	; 0xd36 <__addsf3+0x1e>
     dd0:	93 95       	inc	r25
     dd2:	88 0f       	add	r24, r24
     dd4:	08 f0       	brcs	.+2      	; 0xdd8 <__addsf3x+0x9e>
     dd6:	99 27       	eor	r25, r25
     dd8:	ee 0f       	add	r30, r30
     dda:	97 95       	ror	r25
     ddc:	87 95       	ror	r24
     dde:	08 95       	ret

00000de0 <__divsf3>:
     de0:	0c d0       	rcall	.+24     	; 0xdfa <__divsf3x>
     de2:	eb c0       	rjmp	.+470    	; 0xfba <__fp_round>
     de4:	e3 d0       	rcall	.+454    	; 0xfac <__fp_pscB>
     de6:	40 f0       	brcs	.+16     	; 0xdf8 <__divsf3+0x18>
     de8:	da d0       	rcall	.+436    	; 0xf9e <__fp_pscA>
     dea:	30 f0       	brcs	.+12     	; 0xdf8 <__divsf3+0x18>
     dec:	21 f4       	brne	.+8      	; 0xdf6 <__divsf3+0x16>
     dee:	5f 3f       	cpi	r21, 0xFF	; 255
     df0:	19 f0       	breq	.+6      	; 0xdf8 <__divsf3+0x18>
     df2:	cc c0       	rjmp	.+408    	; 0xf8c <__fp_inf>
     df4:	51 11       	cpse	r21, r1
     df6:	15 c1       	rjmp	.+554    	; 0x1022 <__fp_szero>
     df8:	cf c0       	rjmp	.+414    	; 0xf98 <__fp_nan>

00000dfa <__divsf3x>:
     dfa:	f0 d0       	rcall	.+480    	; 0xfdc <__fp_split3>
     dfc:	98 f3       	brcs	.-26     	; 0xde4 <__divsf3+0x4>

00000dfe <__divsf3_pse>:
     dfe:	99 23       	and	r25, r25
     e00:	c9 f3       	breq	.-14     	; 0xdf4 <__divsf3+0x14>
     e02:	55 23       	and	r21, r21
     e04:	b1 f3       	breq	.-20     	; 0xdf2 <__divsf3+0x12>
     e06:	95 1b       	sub	r25, r21
     e08:	55 0b       	sbc	r21, r21
     e0a:	bb 27       	eor	r27, r27
     e0c:	aa 27       	eor	r26, r26
     e0e:	62 17       	cp	r22, r18
     e10:	73 07       	cpc	r23, r19
     e12:	84 07       	cpc	r24, r20
     e14:	38 f0       	brcs	.+14     	; 0xe24 <__divsf3_pse+0x26>
     e16:	9f 5f       	subi	r25, 0xFF	; 255
     e18:	5f 4f       	sbci	r21, 0xFF	; 255
     e1a:	22 0f       	add	r18, r18
     e1c:	33 1f       	adc	r19, r19
     e1e:	44 1f       	adc	r20, r20
     e20:	aa 1f       	adc	r26, r26
     e22:	a9 f3       	breq	.-22     	; 0xe0e <__divsf3_pse+0x10>
     e24:	33 d0       	rcall	.+102    	; 0xe8c <__divsf3_pse+0x8e>
     e26:	0e 2e       	mov	r0, r30
     e28:	3a f0       	brmi	.+14     	; 0xe38 <__divsf3_pse+0x3a>
     e2a:	e0 e8       	ldi	r30, 0x80	; 128
     e2c:	30 d0       	rcall	.+96     	; 0xe8e <__divsf3_pse+0x90>
     e2e:	91 50       	subi	r25, 0x01	; 1
     e30:	50 40       	sbci	r21, 0x00	; 0
     e32:	e6 95       	lsr	r30
     e34:	00 1c       	adc	r0, r0
     e36:	ca f7       	brpl	.-14     	; 0xe2a <__divsf3_pse+0x2c>
     e38:	29 d0       	rcall	.+82     	; 0xe8c <__divsf3_pse+0x8e>
     e3a:	fe 2f       	mov	r31, r30
     e3c:	27 d0       	rcall	.+78     	; 0xe8c <__divsf3_pse+0x8e>
     e3e:	66 0f       	add	r22, r22
     e40:	77 1f       	adc	r23, r23
     e42:	88 1f       	adc	r24, r24
     e44:	bb 1f       	adc	r27, r27
     e46:	26 17       	cp	r18, r22
     e48:	37 07       	cpc	r19, r23
     e4a:	48 07       	cpc	r20, r24
     e4c:	ab 07       	cpc	r26, r27
     e4e:	b0 e8       	ldi	r27, 0x80	; 128
     e50:	09 f0       	breq	.+2      	; 0xe54 <__divsf3_pse+0x56>
     e52:	bb 0b       	sbc	r27, r27
     e54:	80 2d       	mov	r24, r0
     e56:	bf 01       	movw	r22, r30
     e58:	ff 27       	eor	r31, r31
     e5a:	93 58       	subi	r25, 0x83	; 131
     e5c:	5f 4f       	sbci	r21, 0xFF	; 255
     e5e:	2a f0       	brmi	.+10     	; 0xe6a <__divsf3_pse+0x6c>
     e60:	9e 3f       	cpi	r25, 0xFE	; 254
     e62:	51 05       	cpc	r21, r1
     e64:	68 f0       	brcs	.+26     	; 0xe80 <__divsf3_pse+0x82>
     e66:	92 c0       	rjmp	.+292    	; 0xf8c <__fp_inf>
     e68:	dc c0       	rjmp	.+440    	; 0x1022 <__fp_szero>
     e6a:	5f 3f       	cpi	r21, 0xFF	; 255
     e6c:	ec f3       	brlt	.-6      	; 0xe68 <__divsf3_pse+0x6a>
     e6e:	98 3e       	cpi	r25, 0xE8	; 232
     e70:	dc f3       	brlt	.-10     	; 0xe68 <__divsf3_pse+0x6a>
     e72:	86 95       	lsr	r24
     e74:	77 95       	ror	r23
     e76:	67 95       	ror	r22
     e78:	b7 95       	ror	r27
     e7a:	f7 95       	ror	r31
     e7c:	9f 5f       	subi	r25, 0xFF	; 255
     e7e:	c9 f7       	brne	.-14     	; 0xe72 <__divsf3_pse+0x74>
     e80:	88 0f       	add	r24, r24
     e82:	91 1d       	adc	r25, r1
     e84:	96 95       	lsr	r25
     e86:	87 95       	ror	r24
     e88:	97 f9       	bld	r25, 7
     e8a:	08 95       	ret
     e8c:	e1 e0       	ldi	r30, 0x01	; 1
     e8e:	66 0f       	add	r22, r22
     e90:	77 1f       	adc	r23, r23
     e92:	88 1f       	adc	r24, r24
     e94:	bb 1f       	adc	r27, r27
     e96:	62 17       	cp	r22, r18
     e98:	73 07       	cpc	r23, r19
     e9a:	84 07       	cpc	r24, r20
     e9c:	ba 07       	cpc	r27, r26
     e9e:	20 f0       	brcs	.+8      	; 0xea8 <__divsf3_pse+0xaa>
     ea0:	62 1b       	sub	r22, r18
     ea2:	73 0b       	sbc	r23, r19
     ea4:	84 0b       	sbc	r24, r20
     ea6:	ba 0b       	sbc	r27, r26
     ea8:	ee 1f       	adc	r30, r30
     eaa:	88 f7       	brcc	.-30     	; 0xe8e <__divsf3_pse+0x90>
     eac:	e0 95       	com	r30
     eae:	08 95       	ret

00000eb0 <__fixsfsi>:
     eb0:	04 d0       	rcall	.+8      	; 0xeba <__fixunssfsi>
     eb2:	68 94       	set
     eb4:	b1 11       	cpse	r27, r1
     eb6:	b5 c0       	rjmp	.+362    	; 0x1022 <__fp_szero>
     eb8:	08 95       	ret

00000eba <__fixunssfsi>:
     eba:	98 d0       	rcall	.+304    	; 0xfec <__fp_splitA>
     ebc:	88 f0       	brcs	.+34     	; 0xee0 <__fixunssfsi+0x26>
     ebe:	9f 57       	subi	r25, 0x7F	; 127
     ec0:	90 f0       	brcs	.+36     	; 0xee6 <__fixunssfsi+0x2c>
     ec2:	b9 2f       	mov	r27, r25
     ec4:	99 27       	eor	r25, r25
     ec6:	b7 51       	subi	r27, 0x17	; 23
     ec8:	a0 f0       	brcs	.+40     	; 0xef2 <__fixunssfsi+0x38>
     eca:	d1 f0       	breq	.+52     	; 0xf00 <__fixunssfsi+0x46>
     ecc:	66 0f       	add	r22, r22
     ece:	77 1f       	adc	r23, r23
     ed0:	88 1f       	adc	r24, r24
     ed2:	99 1f       	adc	r25, r25
     ed4:	1a f0       	brmi	.+6      	; 0xedc <__fixunssfsi+0x22>
     ed6:	ba 95       	dec	r27
     ed8:	c9 f7       	brne	.-14     	; 0xecc <__fixunssfsi+0x12>
     eda:	12 c0       	rjmp	.+36     	; 0xf00 <__fixunssfsi+0x46>
     edc:	b1 30       	cpi	r27, 0x01	; 1
     ede:	81 f0       	breq	.+32     	; 0xf00 <__fixunssfsi+0x46>
     ee0:	9f d0       	rcall	.+318    	; 0x1020 <__fp_zero>
     ee2:	b1 e0       	ldi	r27, 0x01	; 1
     ee4:	08 95       	ret
     ee6:	9c c0       	rjmp	.+312    	; 0x1020 <__fp_zero>
     ee8:	67 2f       	mov	r22, r23
     eea:	78 2f       	mov	r23, r24
     eec:	88 27       	eor	r24, r24
     eee:	b8 5f       	subi	r27, 0xF8	; 248
     ef0:	39 f0       	breq	.+14     	; 0xf00 <__fixunssfsi+0x46>
     ef2:	b9 3f       	cpi	r27, 0xF9	; 249
     ef4:	cc f3       	brlt	.-14     	; 0xee8 <__fixunssfsi+0x2e>
     ef6:	86 95       	lsr	r24
     ef8:	77 95       	ror	r23
     efa:	67 95       	ror	r22
     efc:	b3 95       	inc	r27
     efe:	d9 f7       	brne	.-10     	; 0xef6 <__fixunssfsi+0x3c>
     f00:	3e f4       	brtc	.+14     	; 0xf10 <__fixunssfsi+0x56>
     f02:	90 95       	com	r25
     f04:	80 95       	com	r24
     f06:	70 95       	com	r23
     f08:	61 95       	neg	r22
     f0a:	7f 4f       	sbci	r23, 0xFF	; 255
     f0c:	8f 4f       	sbci	r24, 0xFF	; 255
     f0e:	9f 4f       	sbci	r25, 0xFF	; 255
     f10:	08 95       	ret

00000f12 <__floatunsisf>:
     f12:	e8 94       	clt
     f14:	09 c0       	rjmp	.+18     	; 0xf28 <__floatsisf+0x12>

00000f16 <__floatsisf>:
     f16:	97 fb       	bst	r25, 7
     f18:	3e f4       	brtc	.+14     	; 0xf28 <__floatsisf+0x12>
     f1a:	90 95       	com	r25
     f1c:	80 95       	com	r24
     f1e:	70 95       	com	r23
     f20:	61 95       	neg	r22
     f22:	7f 4f       	sbci	r23, 0xFF	; 255
     f24:	8f 4f       	sbci	r24, 0xFF	; 255
     f26:	9f 4f       	sbci	r25, 0xFF	; 255
     f28:	99 23       	and	r25, r25
     f2a:	a9 f0       	breq	.+42     	; 0xf56 <__floatsisf+0x40>
     f2c:	f9 2f       	mov	r31, r25
     f2e:	96 e9       	ldi	r25, 0x96	; 150
     f30:	bb 27       	eor	r27, r27
     f32:	93 95       	inc	r25
     f34:	f6 95       	lsr	r31
     f36:	87 95       	ror	r24
     f38:	77 95       	ror	r23
     f3a:	67 95       	ror	r22
     f3c:	b7 95       	ror	r27
     f3e:	f1 11       	cpse	r31, r1
     f40:	f8 cf       	rjmp	.-16     	; 0xf32 <__floatsisf+0x1c>
     f42:	fa f4       	brpl	.+62     	; 0xf82 <__floatsisf+0x6c>
     f44:	bb 0f       	add	r27, r27
     f46:	11 f4       	brne	.+4      	; 0xf4c <__floatsisf+0x36>
     f48:	60 ff       	sbrs	r22, 0
     f4a:	1b c0       	rjmp	.+54     	; 0xf82 <__floatsisf+0x6c>
     f4c:	6f 5f       	subi	r22, 0xFF	; 255
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	8f 4f       	sbci	r24, 0xFF	; 255
     f52:	9f 4f       	sbci	r25, 0xFF	; 255
     f54:	16 c0       	rjmp	.+44     	; 0xf82 <__floatsisf+0x6c>
     f56:	88 23       	and	r24, r24
     f58:	11 f0       	breq	.+4      	; 0xf5e <__floatsisf+0x48>
     f5a:	96 e9       	ldi	r25, 0x96	; 150
     f5c:	11 c0       	rjmp	.+34     	; 0xf80 <__floatsisf+0x6a>
     f5e:	77 23       	and	r23, r23
     f60:	21 f0       	breq	.+8      	; 0xf6a <__floatsisf+0x54>
     f62:	9e e8       	ldi	r25, 0x8E	; 142
     f64:	87 2f       	mov	r24, r23
     f66:	76 2f       	mov	r23, r22
     f68:	05 c0       	rjmp	.+10     	; 0xf74 <__floatsisf+0x5e>
     f6a:	66 23       	and	r22, r22
     f6c:	71 f0       	breq	.+28     	; 0xf8a <__floatsisf+0x74>
     f6e:	96 e8       	ldi	r25, 0x86	; 134
     f70:	86 2f       	mov	r24, r22
     f72:	70 e0       	ldi	r23, 0x00	; 0
     f74:	60 e0       	ldi	r22, 0x00	; 0
     f76:	2a f0       	brmi	.+10     	; 0xf82 <__floatsisf+0x6c>
     f78:	9a 95       	dec	r25
     f7a:	66 0f       	add	r22, r22
     f7c:	77 1f       	adc	r23, r23
     f7e:	88 1f       	adc	r24, r24
     f80:	da f7       	brpl	.-10     	; 0xf78 <__floatsisf+0x62>
     f82:	88 0f       	add	r24, r24
     f84:	96 95       	lsr	r25
     f86:	87 95       	ror	r24
     f88:	97 f9       	bld	r25, 7
     f8a:	08 95       	ret

00000f8c <__fp_inf>:
     f8c:	97 f9       	bld	r25, 7
     f8e:	9f 67       	ori	r25, 0x7F	; 127
     f90:	80 e8       	ldi	r24, 0x80	; 128
     f92:	70 e0       	ldi	r23, 0x00	; 0
     f94:	60 e0       	ldi	r22, 0x00	; 0
     f96:	08 95       	ret

00000f98 <__fp_nan>:
     f98:	9f ef       	ldi	r25, 0xFF	; 255
     f9a:	80 ec       	ldi	r24, 0xC0	; 192
     f9c:	08 95       	ret

00000f9e <__fp_pscA>:
     f9e:	00 24       	eor	r0, r0
     fa0:	0a 94       	dec	r0
     fa2:	16 16       	cp	r1, r22
     fa4:	17 06       	cpc	r1, r23
     fa6:	18 06       	cpc	r1, r24
     fa8:	09 06       	cpc	r0, r25
     faa:	08 95       	ret

00000fac <__fp_pscB>:
     fac:	00 24       	eor	r0, r0
     fae:	0a 94       	dec	r0
     fb0:	12 16       	cp	r1, r18
     fb2:	13 06       	cpc	r1, r19
     fb4:	14 06       	cpc	r1, r20
     fb6:	05 06       	cpc	r0, r21
     fb8:	08 95       	ret

00000fba <__fp_round>:
     fba:	09 2e       	mov	r0, r25
     fbc:	03 94       	inc	r0
     fbe:	00 0c       	add	r0, r0
     fc0:	11 f4       	brne	.+4      	; 0xfc6 <__fp_round+0xc>
     fc2:	88 23       	and	r24, r24
     fc4:	52 f0       	brmi	.+20     	; 0xfda <__fp_round+0x20>
     fc6:	bb 0f       	add	r27, r27
     fc8:	40 f4       	brcc	.+16     	; 0xfda <__fp_round+0x20>
     fca:	bf 2b       	or	r27, r31
     fcc:	11 f4       	brne	.+4      	; 0xfd2 <__fp_round+0x18>
     fce:	60 ff       	sbrs	r22, 0
     fd0:	04 c0       	rjmp	.+8      	; 0xfda <__fp_round+0x20>
     fd2:	6f 5f       	subi	r22, 0xFF	; 255
     fd4:	7f 4f       	sbci	r23, 0xFF	; 255
     fd6:	8f 4f       	sbci	r24, 0xFF	; 255
     fd8:	9f 4f       	sbci	r25, 0xFF	; 255
     fda:	08 95       	ret

00000fdc <__fp_split3>:
     fdc:	57 fd       	sbrc	r21, 7
     fde:	90 58       	subi	r25, 0x80	; 128
     fe0:	44 0f       	add	r20, r20
     fe2:	55 1f       	adc	r21, r21
     fe4:	59 f0       	breq	.+22     	; 0xffc <__fp_splitA+0x10>
     fe6:	5f 3f       	cpi	r21, 0xFF	; 255
     fe8:	71 f0       	breq	.+28     	; 0x1006 <__fp_splitA+0x1a>
     fea:	47 95       	ror	r20

00000fec <__fp_splitA>:
     fec:	88 0f       	add	r24, r24
     fee:	97 fb       	bst	r25, 7
     ff0:	99 1f       	adc	r25, r25
     ff2:	61 f0       	breq	.+24     	; 0x100c <__fp_splitA+0x20>
     ff4:	9f 3f       	cpi	r25, 0xFF	; 255
     ff6:	79 f0       	breq	.+30     	; 0x1016 <__fp_splitA+0x2a>
     ff8:	87 95       	ror	r24
     ffa:	08 95       	ret
     ffc:	12 16       	cp	r1, r18
     ffe:	13 06       	cpc	r1, r19
    1000:	14 06       	cpc	r1, r20
    1002:	55 1f       	adc	r21, r21
    1004:	f2 cf       	rjmp	.-28     	; 0xfea <__fp_split3+0xe>
    1006:	46 95       	lsr	r20
    1008:	f1 df       	rcall	.-30     	; 0xfec <__fp_splitA>
    100a:	08 c0       	rjmp	.+16     	; 0x101c <__fp_splitA+0x30>
    100c:	16 16       	cp	r1, r22
    100e:	17 06       	cpc	r1, r23
    1010:	18 06       	cpc	r1, r24
    1012:	99 1f       	adc	r25, r25
    1014:	f1 cf       	rjmp	.-30     	; 0xff8 <__fp_splitA+0xc>
    1016:	86 95       	lsr	r24
    1018:	71 05       	cpc	r23, r1
    101a:	61 05       	cpc	r22, r1
    101c:	08 94       	sec
    101e:	08 95       	ret

00001020 <__fp_zero>:
    1020:	e8 94       	clt

00001022 <__fp_szero>:
    1022:	bb 27       	eor	r27, r27
    1024:	66 27       	eor	r22, r22
    1026:	77 27       	eor	r23, r23
    1028:	cb 01       	movw	r24, r22
    102a:	97 f9       	bld	r25, 7
    102c:	08 95       	ret

0000102e <__mulsf3>:
    102e:	0b d0       	rcall	.+22     	; 0x1046 <__mulsf3x>
    1030:	c4 cf       	rjmp	.-120    	; 0xfba <__fp_round>
    1032:	b5 df       	rcall	.-150    	; 0xf9e <__fp_pscA>
    1034:	28 f0       	brcs	.+10     	; 0x1040 <__mulsf3+0x12>
    1036:	ba df       	rcall	.-140    	; 0xfac <__fp_pscB>
    1038:	18 f0       	brcs	.+6      	; 0x1040 <__mulsf3+0x12>
    103a:	95 23       	and	r25, r21
    103c:	09 f0       	breq	.+2      	; 0x1040 <__mulsf3+0x12>
    103e:	a6 cf       	rjmp	.-180    	; 0xf8c <__fp_inf>
    1040:	ab cf       	rjmp	.-170    	; 0xf98 <__fp_nan>
    1042:	11 24       	eor	r1, r1
    1044:	ee cf       	rjmp	.-36     	; 0x1022 <__fp_szero>

00001046 <__mulsf3x>:
    1046:	ca df       	rcall	.-108    	; 0xfdc <__fp_split3>
    1048:	a0 f3       	brcs	.-24     	; 0x1032 <__mulsf3+0x4>

0000104a <__mulsf3_pse>:
    104a:	95 9f       	mul	r25, r21
    104c:	d1 f3       	breq	.-12     	; 0x1042 <__mulsf3+0x14>
    104e:	95 0f       	add	r25, r21
    1050:	50 e0       	ldi	r21, 0x00	; 0
    1052:	55 1f       	adc	r21, r21
    1054:	62 9f       	mul	r22, r18
    1056:	f0 01       	movw	r30, r0
    1058:	72 9f       	mul	r23, r18
    105a:	bb 27       	eor	r27, r27
    105c:	f0 0d       	add	r31, r0
    105e:	b1 1d       	adc	r27, r1
    1060:	63 9f       	mul	r22, r19
    1062:	aa 27       	eor	r26, r26
    1064:	f0 0d       	add	r31, r0
    1066:	b1 1d       	adc	r27, r1
    1068:	aa 1f       	adc	r26, r26
    106a:	64 9f       	mul	r22, r20
    106c:	66 27       	eor	r22, r22
    106e:	b0 0d       	add	r27, r0
    1070:	a1 1d       	adc	r26, r1
    1072:	66 1f       	adc	r22, r22
    1074:	82 9f       	mul	r24, r18
    1076:	22 27       	eor	r18, r18
    1078:	b0 0d       	add	r27, r0
    107a:	a1 1d       	adc	r26, r1
    107c:	62 1f       	adc	r22, r18
    107e:	73 9f       	mul	r23, r19
    1080:	b0 0d       	add	r27, r0
    1082:	a1 1d       	adc	r26, r1
    1084:	62 1f       	adc	r22, r18
    1086:	83 9f       	mul	r24, r19
    1088:	a0 0d       	add	r26, r0
    108a:	61 1d       	adc	r22, r1
    108c:	22 1f       	adc	r18, r18
    108e:	74 9f       	mul	r23, r20
    1090:	33 27       	eor	r19, r19
    1092:	a0 0d       	add	r26, r0
    1094:	61 1d       	adc	r22, r1
    1096:	23 1f       	adc	r18, r19
    1098:	84 9f       	mul	r24, r20
    109a:	60 0d       	add	r22, r0
    109c:	21 1d       	adc	r18, r1
    109e:	82 2f       	mov	r24, r18
    10a0:	76 2f       	mov	r23, r22
    10a2:	6a 2f       	mov	r22, r26
    10a4:	11 24       	eor	r1, r1
    10a6:	9f 57       	subi	r25, 0x7F	; 127
    10a8:	50 40       	sbci	r21, 0x00	; 0
    10aa:	8a f0       	brmi	.+34     	; 0x10ce <__mulsf3_pse+0x84>
    10ac:	e1 f0       	breq	.+56     	; 0x10e6 <__mulsf3_pse+0x9c>
    10ae:	88 23       	and	r24, r24
    10b0:	4a f0       	brmi	.+18     	; 0x10c4 <__mulsf3_pse+0x7a>
    10b2:	ee 0f       	add	r30, r30
    10b4:	ff 1f       	adc	r31, r31
    10b6:	bb 1f       	adc	r27, r27
    10b8:	66 1f       	adc	r22, r22
    10ba:	77 1f       	adc	r23, r23
    10bc:	88 1f       	adc	r24, r24
    10be:	91 50       	subi	r25, 0x01	; 1
    10c0:	50 40       	sbci	r21, 0x00	; 0
    10c2:	a9 f7       	brne	.-22     	; 0x10ae <__mulsf3_pse+0x64>
    10c4:	9e 3f       	cpi	r25, 0xFE	; 254
    10c6:	51 05       	cpc	r21, r1
    10c8:	70 f0       	brcs	.+28     	; 0x10e6 <__mulsf3_pse+0x9c>
    10ca:	60 cf       	rjmp	.-320    	; 0xf8c <__fp_inf>
    10cc:	aa cf       	rjmp	.-172    	; 0x1022 <__fp_szero>
    10ce:	5f 3f       	cpi	r21, 0xFF	; 255
    10d0:	ec f3       	brlt	.-6      	; 0x10cc <__mulsf3_pse+0x82>
    10d2:	98 3e       	cpi	r25, 0xE8	; 232
    10d4:	dc f3       	brlt	.-10     	; 0x10cc <__mulsf3_pse+0x82>
    10d6:	86 95       	lsr	r24
    10d8:	77 95       	ror	r23
    10da:	67 95       	ror	r22
    10dc:	b7 95       	ror	r27
    10de:	f7 95       	ror	r31
    10e0:	e7 95       	ror	r30
    10e2:	9f 5f       	subi	r25, 0xFF	; 255
    10e4:	c1 f7       	brne	.-16     	; 0x10d6 <__mulsf3_pse+0x8c>
    10e6:	fe 2b       	or	r31, r30
    10e8:	88 0f       	add	r24, r24
    10ea:	91 1d       	adc	r25, r1
    10ec:	96 95       	lsr	r25
    10ee:	87 95       	ror	r24
    10f0:	97 f9       	bld	r25, 7
    10f2:	08 95       	ret

000010f4 <_exit>:
    10f4:	f8 94       	cli

000010f6 <__stop_program>:
    10f6:	ff cf       	rjmp	.-2      	; 0x10f6 <__stop_program>
